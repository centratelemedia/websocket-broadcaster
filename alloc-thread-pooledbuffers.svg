<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1030" onload="init(evt)" viewBox="0 0 1200 1030" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1013"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1013"> </text>
<g id="frames">
<g>
<title>all (195 samples, 100.00%)</title><rect x="10.0" y="979.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="990.0">all</text>
</g>
<g>
<title>[AMQP Connection 127.0.0.1:5672 tid=21975] (30 samples, 15.38%)</title><rect x="10.0" y="963.0" width="181.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="974.0">[AMQP Connection 127.0...</text>
</g>
<g>
<title>java/lang/Thread.run (30 samples, 15.38%)</title><rect x="10.0" y="947.0" width="181.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="958.0">java/lang/Thread.run</text>
</g>
<g>
<title>com/rabbitmq/client/impl/AMQConnection$MainLoop.run (30 samples, 15.38%)</title><rect x="10.0" y="931.0" width="181.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="942.0">com/rabbitmq/client/imp..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/AMQConnection.access$300 (22 samples, 11.28%)</title><rect x="10.0" y="915.0" width="133.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="926.0">com/rabbitmq/clie..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/AMQConnection.readFrame (22 samples, 11.28%)</title><rect x="10.0" y="899.0" width="133.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="910.0">com/rabbitmq/clie..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/AMQChannel.handleFrame (22 samples, 11.28%)</title><rect x="10.0" y="883.0" width="133.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="894.0">com/rabbitmq/clie..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/AMQChannel.handleCompleteInboundCommand (3 samples, 1.54%)</title><rect x="10.0" y="867.0" width="18.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/ChannelN.processAsync (3 samples, 1.54%)</title><rect x="10.0" y="851.0" width="18.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/recovery/RecoveryAwareChannelN.processDelivery (3 samples, 1.54%)</title><rect x="10.0" y="835.0" width="18.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/ChannelN.processDelivery (3 samples, 1.54%)</title><rect x="10.0" y="819.0" width="18.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerDispatcher.handleDelivery (3 samples, 1.54%)</title><rect x="10.0" y="803.0" width="18.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerDispatcher.executeUnlessShuttingDown (3 samples, 1.54%)</title><rect x="10.0" y="787.0" width="18.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerDispatcher.execute (3 samples, 1.54%)</title><rect x="10.0" y="771.0" width="18.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="13.0" y="782.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerWorkService.addWork (3 samples, 1.54%)</title><rect x="10.0" y="755.0" width="18.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="766.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/WorkPool.addWorkItem (3 samples, 1.54%)</title><rect x="10.0" y="739.0" width="18.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="750.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/WorkPool.dormantToReady (3 samples, 1.54%)</title><rect x="10.0" y="723.0" width="18.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="13.0" y="734.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/SetQueue.addIfNotPresent (3 samples, 1.54%)</title><rect x="10.0" y="707.0" width="18.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="13.0" y="718.0"></text>
</g>
<g>
<title>java/util/HashSet.add (3 samples, 1.54%)</title><rect x="10.0" y="691.0" width="18.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="13.0" y="702.0"></text>
</g>
<g>
<title>java/util/HashMap.put (3 samples, 1.54%)</title><rect x="10.0" y="675.0" width="18.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.0" y="686.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (3 samples, 1.54%)</title><rect x="10.0" y="659.0" width="18.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.0" y="670.0"></text>
</g>
<g>
<title>java/util/HashMap.newNode (3 samples, 1.54%)</title><rect x="10.0" y="643.0" width="18.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="654.0"></text>
</g>
<g>
<title>java.util.HashMap$Node (3 samples, 1.54%)</title><rect x="10.0" y="627.0" width="18.2" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="13.0" y="638.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/AMQCommand.handleFrame (19 samples, 9.74%)</title><rect x="28.2" y="867.0" width="114.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="31.2" y="878.0">com/rabbitmq/c..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/CommandAssembler.handleFrame (19 samples, 9.74%)</title><rect x="28.2" y="851.0" width="114.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="31.2" y="862.0">com/rabbitmq/c..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/CommandAssembler.consumeHeaderFrame (8 samples, 4.10%)</title><rect x="28.2" y="835.0" width="48.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="31.2" y="846.0">com/..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/Frame.getInputStream (8 samples, 4.10%)</title><rect x="28.2" y="819.0" width="48.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="31.2" y="830.0">com/..</text>
</g>
<g>
<title>java/io/DataInputStream.&lt;init&gt; (8 samples, 4.10%)</title><rect x="28.2" y="803.0" width="48.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="31.2" y="814.0">java..</text>
</g>
<g>
<title>byte[] (3 samples, 1.54%)</title><rect x="28.2" y="787.0" width="18.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="31.2" y="798.0"></text>
</g>
<g>
<title>char[] (5 samples, 2.56%)</title><rect x="46.3" y="787.0" width="30.3" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="49.3" y="798.0">ch..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/CommandAssembler.consumeMethodFrame (11 samples, 5.64%)</title><rect x="76.6" y="835.0" width="66.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="79.6" y="846.0">com/rab..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/AMQImpl.readMethodFrom (7 samples, 3.59%)</title><rect x="76.6" y="819.0" width="42.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="79.6" y="830.0">com/..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/AMQImpl$Basic$Deliver.&lt;init&gt; (7 samples, 3.59%)</title><rect x="76.6" y="803.0" width="42.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="79.6" y="814.0">com/..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/MethodArgumentReader.readShortstr (7 samples, 3.59%)</title><rect x="76.6" y="787.0" width="42.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="79.6" y="798.0">com/..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/ValueReader.readShortstr (7 samples, 3.59%)</title><rect x="76.6" y="771.0" width="42.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="79.6" y="782.0">com/..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/ValueReader.readShortstr (7 samples, 3.59%)</title><rect x="76.6" y="755.0" width="42.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="79.6" y="766.0">com/..</text>
</g>
<g>
<title>byte[] (5 samples, 2.56%)</title><rect x="76.6" y="739.0" width="30.2" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="79.6" y="750.0">by..</text>
</g>
<g>
<title>java.lang.String (2 samples, 1.03%)</title><rect x="106.8" y="739.0" width="12.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="109.8" y="750.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/Frame.getInputStream (4 samples, 2.05%)</title><rect x="118.9" y="819.0" width="24.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="121.9" y="830.0">c..</text>
</g>
<g>
<title>java.io.DataInputStream (4 samples, 2.05%)</title><rect x="118.9" y="803.0" width="24.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="121.9" y="814.0">j..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/SocketFrameHandler.readFrame (8 samples, 4.10%)</title><rect x="143.1" y="915.0" width="48.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="146.1" y="926.0">com/..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/Frame.readFrom (8 samples, 4.10%)</title><rect x="143.1" y="899.0" width="48.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="146.1" y="910.0">com/..</text>
</g>
<g>
<title>byte[] (8 samples, 4.10%)</title><rect x="143.1" y="883.0" width="48.4" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="146.1" y="894.0">byte[]</text>
</g>
<g>
<title>[Attach Listener tid=22063] (2 samples, 1.03%)</title><rect x="191.5" y="963.0" width="12.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="194.5" y="974.0"></text>
</g>
<g>
<title>[not_walkable] (1 samples, 0.51%)</title><rect x="191.5" y="947.0" width="6.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="194.5" y="958.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.51%)</title><rect x="191.5" y="931.0" width="6.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="194.5" y="942.0"></text>
</g>
<g>
<title>java/lang/NoSuchMethodError.&lt;init&gt; (1 samples, 0.51%)</title><rect x="197.6" y="947.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="200.6" y="958.0"></text>
</g>
<g>
<title>java/lang/IncompatibleClassChangeError.&lt;init&gt; (1 samples, 0.51%)</title><rect x="197.6" y="931.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="200.6" y="942.0"></text>
</g>
<g>
<title>java/lang/LinkageError.&lt;init&gt; (1 samples, 0.51%)</title><rect x="197.6" y="915.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="200.6" y="926.0"></text>
</g>
<g>
<title>java/lang/Error.&lt;init&gt; (1 samples, 0.51%)</title><rect x="197.6" y="899.0" width="6.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="200.6" y="910.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.51%)</title><rect x="197.6" y="883.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="200.6" y="894.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.51%)</title><rect x="197.6" y="867.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="200.6" y="878.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.51%)</title><rect x="197.6" y="851.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="200.6" y="862.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.51%)</title><rect x="197.6" y="835.0" width="6.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="200.6" y="846.0"></text>
</g>
<g>
<title>[epollEventLoopGroup-3-1 tid=21993] (90 samples, 46.15%)</title><rect x="203.6" y="963.0" width="544.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="206.6" y="974.0">[epollEventLoopGroup-3-1 tid=21993]</text>
</g>
<g>
<title>java/lang/Thread.run (90 samples, 46.15%)</title><rect x="203.6" y="947.0" width="544.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="206.6" y="958.0">java/lang/Thread.run</text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocalRunnable.run (90 samples, 46.15%)</title><rect x="203.6" y="931.0" width="544.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="206.6" y="942.0">io/netty/util/concurrent/FastThreadLocalRunnable.run</text>
</g>
<g>
<title>io/netty/util/internal/ThreadExecutorMap$2.run (90 samples, 46.15%)</title><rect x="203.6" y="915.0" width="544.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="206.6" y="926.0">io/netty/util/internal/ThreadExecutorMap$2.run</text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor$5.run (90 samples, 46.15%)</title><rect x="203.6" y="899.0" width="544.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="206.6" y="910.0">io/netty/util/concurrent/SingleThreadEventExecutor$5.run</text>
</g>
<g>
<title>io/netty/channel/epoll/EpollEventLoop.run (90 samples, 46.15%)</title><rect x="203.6" y="883.0" width="544.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="206.6" y="894.0">io/netty/channel/epoll/EpollEventLoop.run</text>
</g>
<g>
<title>io/netty/channel/epoll/EpollEventLoop.processReady (90 samples, 46.15%)</title><rect x="203.6" y="867.0" width="544.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="206.6" y="878.0">io/netty/channel/epoll/EpollEventLoop.processReady</text>
</g>
<g>
<title>io/netty/channel/epoll/AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady (90 samples, 46.15%)</title><rect x="203.6" y="851.0" width="544.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="206.6" y="862.0">io/netty/channel/epoll/AbstractEpollStreamChannel$EpollStreamUnsafe.epollIn..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.fireChannelRead (90 samples, 46.15%)</title><rect x="203.6" y="835.0" width="544.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="206.6" y="846.0">io/netty/channel/DefaultChannelPipeline.fireChannelRead</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (90 samples, 46.15%)</title><rect x="203.6" y="819.0" width="544.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="206.6" y="830.0">io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (90 samples, 46.15%)</title><rect x="203.6" y="803.0" width="544.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="206.6" y="814.0">io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.channelRead (90 samples, 46.15%)</title><rect x="203.6" y="787.0" width="544.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="206.6" y="798.0">io/netty/channel/DefaultChannelPipeline$HeadContext.channelRead</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (90 samples, 46.15%)</title><rect x="203.6" y="771.0" width="544.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="206.6" y="782.0">io/netty/channel/AbstractChannelHandlerContext.fireChannelRead</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (90 samples, 46.15%)</title><rect x="203.6" y="755.0" width="544.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="206.6" y="766.0">io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (90 samples, 46.15%)</title><rect x="203.6" y="739.0" width="544.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="206.6" y="750.0">io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead</text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.channelRead (90 samples, 46.15%)</title><rect x="203.6" y="723.0" width="544.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="206.6" y="734.0">io/netty/channel/CombinedChannelDuplexHandler.channelRead</text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.channelRead (90 samples, 46.15%)</title><rect x="203.6" y="707.0" width="544.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="206.6" y="718.0">io/netty/handler/codec/ByteToMessageDecoder.channelRead</text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.fireChannelRead (90 samples, 46.15%)</title><rect x="203.6" y="691.0" width="544.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="206.6" y="702.0">io/netty/handler/codec/ByteToMessageDecoder.fireChannelRead</text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead (90 samples, 46.15%)</title><rect x="203.6" y="675.0" width="544.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="206.6" y="686.0">io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerConte..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (90 samples, 46.15%)</title><rect x="203.6" y="659.0" width="544.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="206.6" y="670.0">io/netty/channel/AbstractChannelHandlerContext.fireChannelRead</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (90 samples, 46.15%)</title><rect x="203.6" y="643.0" width="544.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="206.6" y="654.0">io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (90 samples, 46.15%)</title><rect x="203.6" y="627.0" width="544.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="206.6" y="638.0">io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead</text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageDecoder.channelRead (90 samples, 46.15%)</title><rect x="203.6" y="611.0" width="544.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="206.6" y="622.0">io/netty/handler/codec/MessageToMessageDecoder.channelRead</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (90 samples, 46.15%)</title><rect x="203.6" y="595.0" width="544.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="206.6" y="606.0">io/netty/channel/AbstractChannelHandlerContext.fireChannelRead</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (90 samples, 46.15%)</title><rect x="203.6" y="579.0" width="544.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="206.6" y="590.0">io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (90 samples, 46.15%)</title><rect x="203.6" y="563.0" width="544.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="206.6" y="574.0">io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead</text>
</g>
<g>
<title>io/netty/channel/SimpleChannelInboundHandler.channelRead (90 samples, 46.15%)</title><rect x="203.6" y="547.0" width="544.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="206.6" y="558.0">io/netty/channel/SimpleChannelInboundHandler.channelRead</text>
</g>
<g>
<title>pbouda/broadcaster/server/netty/HttpRequestHandler.channelRead0 (90 samples, 46.15%)</title><rect x="203.6" y="531.0" width="544.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="206.6" y="542.0">pbouda/broadcaster/server/netty/HttpRequestHandler.channelRead0</text>
</g>
<g>
<title>pbouda/broadcaster/server/netty/HttpRequestHandler.channelRead0 (90 samples, 46.15%)</title><rect x="203.6" y="515.0" width="544.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="206.6" y="526.0">pbouda/broadcaster/server/netty/HttpRequestHandler.channelRead0</text>
</g>
<g>
<title>pbouda/broadcaster/server/netty/route/PrometheusRoute.process (90 samples, 46.15%)</title><rect x="203.6" y="499.0" width="544.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="206.6" y="510.0">pbouda/broadcaster/server/netty/route/PrometheusRoute.process</text>
</g>
<g>
<title>io/micrometer/prometheus/PrometheusMeterRegistry.scrape (88 samples, 45.13%)</title><rect x="203.6" y="483.0" width="532.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="206.6" y="494.0">io/micrometer/prometheus/PrometheusMeterRegistry.scrape</text>
</g>
<g>
<title>io/micrometer/prometheus/PrometheusMeterRegistry.scrape (88 samples, 45.13%)</title><rect x="203.6" y="467.0" width="532.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="206.6" y="478.0">io/micrometer/prometheus/PrometheusMeterRegistry.scrape</text>
</g>
<g>
<title>io/prometheus/client/exporter/common/TextFormat.write004 (88 samples, 45.13%)</title><rect x="203.6" y="451.0" width="532.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="206.6" y="462.0">io/prometheus/client/exporter/common/TextFormat.write004</text>
</g>
<g>
<title>io/prometheus/client/CollectorRegistry$MetricFamilySamplesEnumeration.nextElement (86 samples, 44.10%)</title><rect x="203.6" y="435.0" width="520.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="206.6" y="446.0">io/prometheus/client/CollectorRegistry$MetricFamilySamplesEnumeration.ne..</text>
</g>
<g>
<title>io/prometheus/client/CollectorRegistry$MetricFamilySamplesEnumeration.nextElement (86 samples, 44.10%)</title><rect x="203.6" y="419.0" width="520.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="206.6" y="430.0">io/prometheus/client/CollectorRegistry$MetricFamilySamplesEnumeration.ne..</text>
</g>
<g>
<title>io/prometheus/client/CollectorRegistry$MetricFamilySamplesEnumeration.findNextElement (86 samples, 44.10%)</title><rect x="203.6" y="403.0" width="520.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="206.6" y="414.0">io/prometheus/client/CollectorRegistry$MetricFamilySamplesEnumeration.fi..</text>
</g>
<g>
<title>io/micrometer/prometheus/MicrometerCollector.collect (86 samples, 44.10%)</title><rect x="203.6" y="387.0" width="520.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="206.6" y="398.0">io/micrometer/prometheus/MicrometerCollector.collect</text>
</g>
<g>
<title>io/micrometer/prometheus/PrometheusMeterRegistry$$Lambda$122/841262455.samples (86 samples, 44.10%)</title><rect x="203.6" y="371.0" width="520.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="206.6" y="382.0">io/micrometer/prometheus/PrometheusMeterRegistry$$Lambda$122/841262455.s..</text>
</g>
<g>
<title>io/micrometer/prometheus/PrometheusMeterRegistry.lambda$newGauge$3 (86 samples, 44.10%)</title><rect x="203.6" y="355.0" width="520.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="206.6" y="366.0">io/micrometer/prometheus/PrometheusMeterRegistry.lambda$newGauge$3</text>
</g>
<g>
<title>io/micrometer/core/instrument/internal/DefaultGauge.value (84 samples, 43.08%)</title><rect x="203.6" y="339.0" width="508.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="206.6" y="350.0">io/micrometer/core/instrument/internal/DefaultGauge.value</text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/ProcessMemoryMetrics$$Lambda$154/1168420930.applyAsDouble (72 samples, 36.92%)</title><rect x="203.6" y="323.0" width="435.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="206.6" y="334.0">io/github/mweirauch/micrometer/jvm/extras/ProcessMemoryMetri..</text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/ProcessMemoryMetrics.lambda$bindTo$0 (72 samples, 36.92%)</title><rect x="203.6" y="307.0" width="435.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="206.6" y="318.0">io/github/mweirauch/micrometer/jvm/extras/ProcessMemoryMetri..</text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/ProcessMemoryMetrics.value (72 samples, 36.92%)</title><rect x="203.6" y="291.0" width="435.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="206.6" y="302.0">io/github/mweirauch/micrometer/jvm/extras/ProcessMemoryMetri..</text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsSmaps.get (72 samples, 36.92%)</title><rect x="203.6" y="275.0" width="435.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="206.6" y="286.0">io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsSmaps..</text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsEntry.get (72 samples, 36.92%)</title><rect x="203.6" y="259.0" width="435.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="206.6" y="270.0">io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsEntry..</text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsEntry.collect (72 samples, 36.92%)</title><rect x="203.6" y="243.0" width="435.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="206.6" y="254.0">io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsEntry..</text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsReader.read (72 samples, 36.92%)</title><rect x="203.6" y="227.0" width="435.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="206.6" y="238.0">io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsReade..</text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsReader.readPath (72 samples, 36.92%)</title><rect x="203.6" y="211.0" width="435.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="206.6" y="222.0">io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsReade..</text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsEntry$$Lambda$183/378021278.accept (42 samples, 21.54%)</title><rect x="203.6" y="195.0" width="254.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="206.6" y="206.0">io/github/mweirauch/micrometer/jvm..</text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsEntry.lambda$collect$0 (42 samples, 21.54%)</title><rect x="203.6" y="179.0" width="254.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="206.6" y="190.0">io/github/mweirauch/micrometer/jvm..</text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsSmaps.handle (42 samples, 21.54%)</title><rect x="203.6" y="163.0" width="254.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="206.6" y="174.0">io/github/mweirauch/micrometer/jvm..</text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsSmaps.parseKiloBytes (32 samples, 16.41%)</title><rect x="203.6" y="147.0" width="193.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="206.6" y="158.0">io/github/mweirauch/micro..</text>
</g>
<g>
<title>java/lang/Double.parseDouble (9 samples, 4.62%)</title><rect x="203.6" y="131.0" width="54.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="206.6" y="142.0">java/..</text>
</g>
<g>
<title>jdk/internal/math/FloatingDecimal.parseDouble (9 samples, 4.62%)</title><rect x="203.6" y="115.0" width="54.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="206.6" y="126.0">jdk/i..</text>
</g>
<g>
<title>jdk/internal/math/FloatingDecimal.readJavaFormatString (9 samples, 4.62%)</title><rect x="203.6" y="99.0" width="54.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="206.6" y="110.0">jdk/i..</text>
</g>
<g>
<title>char[] (7 samples, 3.59%)</title><rect x="203.6" y="83.0" width="42.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="206.6" y="94.0">char[]</text>
</g>
<g>
<title>jdk.internal.math.FloatingDecimal$ASCIIToBinaryBuffer (2 samples, 1.03%)</title><rect x="246.0" y="83.0" width="12.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="249.0" y="94.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.group (5 samples, 2.56%)</title><rect x="258.1" y="131.0" width="30.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="261.1" y="142.0">ja..</text>
</g>
<g>
<title>java/util/regex/Matcher.getSubSequence (5 samples, 2.56%)</title><rect x="258.1" y="115.0" width="30.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="261.1" y="126.0">ja..</text>
</g>
<g>
<title>java/lang/String.subSequence (5 samples, 2.56%)</title><rect x="258.1" y="99.0" width="30.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="261.1" y="110.0">ja..</text>
</g>
<g>
<title>java/lang/String.substring (5 samples, 2.56%)</title><rect x="258.1" y="83.0" width="30.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="261.1" y="94.0">ja..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (5 samples, 2.56%)</title><rect x="258.1" y="67.0" width="30.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="261.1" y="78.0">ja..</text>
</g>
<g>
<title>java.lang.String (1 samples, 0.51%)</title><rect x="258.1" y="51.0" width="6.1" height="15" fill="#60cece" rx="2" ry="2"/>
<text x="261.1" y="62.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (4 samples, 2.05%)</title><rect x="264.2" y="51.0" width="24.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="267.2" y="62.0">j..</text>
</g>
<g>
<title>byte[] (4 samples, 2.05%)</title><rect x="264.2" y="35.0" width="24.2" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="267.2" y="46.0">b..</text>
</g>
<g>
<title>java/util/regex/Pattern.matcher (18 samples, 9.23%)</title><rect x="288.4" y="131.0" width="108.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="291.4" y="142.0">java/util/reg..</text>
</g>
<g>
<title>java.util.regex.Matcher (6 samples, 3.08%)</title><rect x="288.4" y="115.0" width="36.3" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="291.4" y="126.0">jav..</text>
</g>
<g>
<title>java/util/regex/Matcher.&lt;init&gt; (12 samples, 6.15%)</title><rect x="324.7" y="115.0" width="72.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="327.7" y="126.0">java/uti..</text>
</g>
<g>
<title>int[] (11 samples, 5.64%)</title><rect x="324.7" y="99.0" width="66.5" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="327.7" y="110.0">int[]</text>
</g>
<g>
<title>java.util.regex.IntHashSet[] (1 samples, 0.51%)</title><rect x="391.2" y="99.0" width="6.1" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="394.2" y="110.0"></text>
</g>
<g>
<title>java/lang/Double.valueOf (2 samples, 1.03%)</title><rect x="397.3" y="147.0" width="12.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="400.3" y="158.0"></text>
</g>
<g>
<title>java.lang.Double (2 samples, 1.03%)</title><rect x="397.3" y="131.0" width="12.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="400.3" y="142.0"></text>
</g>
<g>
<title>java/util/HashMap.compute (8 samples, 4.10%)</title><rect x="409.4" y="147.0" width="48.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="412.4" y="158.0">java..</text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsSmaps$$Lambda$184/655476358.apply (8 samples, 4.10%)</title><rect x="409.4" y="131.0" width="48.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="412.4" y="142.0">io/g..</text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsSmaps.lambda$handle$0 (8 samples, 4.10%)</title><rect x="409.4" y="115.0" width="48.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="412.4" y="126.0">io/g..</text>
</g>
<g>
<title>java/lang/Double.valueOf (8 samples, 4.10%)</title><rect x="409.4" y="99.0" width="48.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="412.4" y="110.0">java..</text>
</g>
<g>
<title>java.lang.Double (8 samples, 4.10%)</title><rect x="409.4" y="83.0" width="48.4" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="412.4" y="94.0">java..</text>
</g>
<g>
<title>java/io/BufferedReader.readLine (28 samples, 14.36%)</title><rect x="457.8" y="195.0" width="169.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="460.8" y="206.0">java/io/BufferedReader..</text>
</g>
<g>
<title>java/io/BufferedReader.readLine (28 samples, 14.36%)</title><rect x="457.8" y="179.0" width="169.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="460.8" y="190.0">java/io/BufferedReader..</text>
</g>
<g>
<title>java.lang.String (12 samples, 6.15%)</title><rect x="457.8" y="163.0" width="72.6" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="460.8" y="174.0">java.lan..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (16 samples, 8.21%)</title><rect x="530.4" y="163.0" width="96.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="533.4" y="174.0">java/lang/S..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (16 samples, 8.21%)</title><rect x="530.4" y="147.0" width="96.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="533.4" y="158.0">java/lang/S..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (16 samples, 8.21%)</title><rect x="530.4" y="131.0" width="96.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="533.4" y="142.0">java/lang/S..</text>
</g>
<g>
<title>byte[] (16 samples, 8.21%)</title><rect x="530.4" y="115.0" width="96.8" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="533.4" y="126.0">byte[]</text>
</g>
<g>
<title>java/nio/file/Files.newBufferedReader (2 samples, 1.03%)</title><rect x="627.2" y="195.0" width="12.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="630.2" y="206.0"></text>
</g>
<g>
<title>java/nio/file/Files.newBufferedReader (2 samples, 1.03%)</title><rect x="627.2" y="179.0" width="12.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="630.2" y="190.0"></text>
</g>
<g>
<title>java/io/BufferedReader.&lt;init&gt; (2 samples, 1.03%)</title><rect x="627.2" y="163.0" width="12.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="630.2" y="174.0"></text>
</g>
<g>
<title>java/io/BufferedReader.&lt;init&gt; (2 samples, 1.03%)</title><rect x="627.2" y="147.0" width="12.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="630.2" y="158.0"></text>
</g>
<g>
<title>char[] (2 samples, 1.03%)</title><rect x="627.2" y="131.0" width="12.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="630.2" y="142.0"></text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/ProcessThreadMetrics$$Lambda$155/872826668.applyAsDouble (6 samples, 3.08%)</title><rect x="639.3" y="323.0" width="36.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="642.3" y="334.0">io/..</text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/ProcessThreadMetrics.lambda$bindTo$0 (6 samples, 3.08%)</title><rect x="639.3" y="307.0" width="36.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="642.3" y="318.0">io/..</text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/ProcessThreadMetrics.value (6 samples, 3.08%)</title><rect x="639.3" y="291.0" width="36.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="642.3" y="302.0">io/..</text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsStatus.get (6 samples, 3.08%)</title><rect x="639.3" y="275.0" width="36.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="642.3" y="286.0">io/..</text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsEntry.get (6 samples, 3.08%)</title><rect x="639.3" y="259.0" width="36.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="642.3" y="270.0">io/..</text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsEntry.collect (6 samples, 3.08%)</title><rect x="639.3" y="243.0" width="36.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="642.3" y="254.0">io/..</text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsReader.read (6 samples, 3.08%)</title><rect x="639.3" y="227.0" width="36.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="642.3" y="238.0">io/..</text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsReader.readPath (6 samples, 3.08%)</title><rect x="639.3" y="211.0" width="36.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="642.3" y="222.0">io/..</text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsEntry$$Lambda$183/378021278.accept (1 samples, 0.51%)</title><rect x="639.3" y="195.0" width="6.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="642.3" y="206.0"></text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsEntry.lambda$collect$0 (1 samples, 0.51%)</title><rect x="639.3" y="179.0" width="6.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="642.3" y="190.0"></text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsStatus.handle (1 samples, 0.51%)</title><rect x="639.3" y="163.0" width="6.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="642.3" y="174.0"></text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsStatus.parseValue (1 samples, 0.51%)</title><rect x="639.3" y="147.0" width="6.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="642.3" y="158.0"></text>
</g>
<g>
<title>java/util/regex/Pattern.matcher (1 samples, 0.51%)</title><rect x="639.3" y="131.0" width="6.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="642.3" y="142.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.&lt;init&gt; (1 samples, 0.51%)</title><rect x="639.3" y="115.0" width="6.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="642.3" y="126.0"></text>
</g>
<g>
<title>int[] (1 samples, 0.51%)</title><rect x="639.3" y="99.0" width="6.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="642.3" y="110.0"></text>
</g>
<g>
<title>java/io/BufferedReader.readLine (1 samples, 0.51%)</title><rect x="645.4" y="195.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="648.4" y="206.0"></text>
</g>
<g>
<title>java/io/BufferedReader.readLine (1 samples, 0.51%)</title><rect x="645.4" y="179.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="648.4" y="190.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.51%)</title><rect x="645.4" y="163.0" width="6.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="648.4" y="174.0"></text>
</g>
<g>
<title>java/nio/file/Files.newBufferedReader (4 samples, 2.05%)</title><rect x="651.4" y="195.0" width="24.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="654.4" y="206.0">j..</text>
</g>
<g>
<title>java/nio/file/Files.newBufferedReader (4 samples, 2.05%)</title><rect x="651.4" y="179.0" width="24.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="654.4" y="190.0">j..</text>
</g>
<g>
<title>java/io/BufferedReader.&lt;init&gt; (2 samples, 1.03%)</title><rect x="651.4" y="163.0" width="12.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="654.4" y="174.0"></text>
</g>
<g>
<title>java/io/BufferedReader.&lt;init&gt; (2 samples, 1.03%)</title><rect x="651.4" y="147.0" width="12.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="654.4" y="158.0"></text>
</g>
<g>
<title>char[] (2 samples, 1.03%)</title><rect x="651.4" y="131.0" width="12.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="654.4" y="142.0"></text>
</g>
<g>
<title>java/io/InputStreamReader.&lt;init&gt; (2 samples, 1.03%)</title><rect x="663.5" y="163.0" width="12.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="666.5" y="174.0"></text>
</g>
<g>
<title>sun/nio/cs/StreamDecoder.forInputStreamReader (2 samples, 1.03%)</title><rect x="663.5" y="147.0" width="12.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="666.5" y="158.0"></text>
</g>
<g>
<title>sun/nio/cs/StreamDecoder.&lt;init&gt; (2 samples, 1.03%)</title><rect x="663.5" y="131.0" width="12.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="666.5" y="142.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.allocate (2 samples, 1.03%)</title><rect x="663.5" y="115.0" width="12.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="666.5" y="126.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 1.03%)</title><rect x="663.5" y="99.0" width="12.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="666.5" y="110.0"></text>
</g>
<g>
<title>byte[] (2 samples, 1.03%)</title><rect x="663.5" y="83.0" width="12.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="666.5" y="94.0"></text>
</g>
<g>
<title>io/micrometer/core/instrument/binder/jvm/JvmThreadMetrics$$Lambda$140/1472216456.applyAsDouble (5 samples, 2.56%)</title><rect x="675.6" y="323.0" width="30.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="678.6" y="334.0">io..</text>
</g>
<g>
<title>io/micrometer/core/instrument/binder/jvm/JvmThreadMetrics.lambda$bindTo$0 (5 samples, 2.56%)</title><rect x="675.6" y="307.0" width="30.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="678.6" y="318.0">io..</text>
</g>
<g>
<title>io/micrometer/core/instrument/binder/jvm/JvmThreadMetrics.getThreadStateCount (5 samples, 2.56%)</title><rect x="675.6" y="291.0" width="30.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="678.6" y="302.0">io..</text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo (5 samples, 2.56%)</title><rect x="675.6" y="275.0" width="30.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="678.6" y="286.0">su..</text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo (5 samples, 2.56%)</title><rect x="675.6" y="259.0" width="30.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="678.6" y="270.0">su..</text>
</g>
<g>
<title>sun/management/ThreadImpl.getThreadInfo1 (5 samples, 2.56%)</title><rect x="675.6" y="243.0" width="30.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="678.6" y="254.0">su..</text>
</g>
<g>
<title>java.lang.management.ThreadInfo (3 samples, 1.54%)</title><rect x="675.6" y="227.0" width="18.2" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="678.6" y="238.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.&lt;init&gt; (2 samples, 1.03%)</title><rect x="693.8" y="227.0" width="12.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="696.8" y="238.0"></text>
</g>
<g>
<title>java/lang/management/ThreadInfo.initialize (2 samples, 1.03%)</title><rect x="693.8" y="211.0" width="12.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="696.8" y="222.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 1.03%)</title><rect x="693.8" y="195.0" width="12.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="696.8" y="206.0"></text>
</g>
<g>
<title>java/lang/invoke/DelegatingMethodHandle$Holder.reinvoke_L (2 samples, 1.03%)</title><rect x="693.8" y="179.0" width="12.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="696.8" y="190.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/473524237.invoke (2 samples, 1.03%)</title><rect x="693.8" y="163.0" width="12.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="696.8" y="174.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 1.03%)</title><rect x="693.8" y="147.0" width="12.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="696.8" y="158.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.51%)</title><rect x="693.8" y="131.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="696.8" y="142.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.51%)</title><rect x="693.8" y="115.0" width="6.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="696.8" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.newArray (1 samples, 0.51%)</title><rect x="699.8" y="131.0" width="6.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="702.8" y="142.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray (1 samples, 0.51%)</title><rect x="699.8" y="115.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="702.8" y="126.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.allocateUninitializedArray0 (1 samples, 0.51%)</title><rect x="699.8" y="99.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="702.8" y="110.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.51%)</title><rect x="699.8" y="83.0" width="6.1" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="702.8" y="94.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/prometheus/ByteBufAllocatorMetrics$$Lambda$157/550147359.applyAsDouble (1 samples, 0.51%)</title><rect x="705.9" y="323.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="708.9" y="334.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBufAllocatorMetric.usedDirectMemory (1 samples, 0.51%)</title><rect x="705.9" y="307.0" width="6.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="708.9" y="318.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBufAllocator.usedDirectMemory (1 samples, 0.51%)</title><rect x="705.9" y="291.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="708.9" y="302.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBufAllocator.usedMemory (1 samples, 0.51%)</title><rect x="705.9" y="275.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="708.9" y="286.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.numActiveBytes (1 samples, 0.51%)</title><rect x="705.9" y="259.0" width="6.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="708.9" y="270.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolChunkList.iterator (1 samples, 0.51%)</title><rect x="705.9" y="243.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="708.9" y="254.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1 samples, 0.51%)</title><rect x="705.9" y="227.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="708.9" y="238.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (1 samples, 0.51%)</title><rect x="705.9" y="211.0" width="6.0" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="708.9" y="222.0"></text>
</g>
<g>
<title>io/micrometer/prometheus/MicrometerCollector$Family.&lt;init&gt; (1 samples, 0.51%)</title><rect x="711.9" y="339.0" width="6.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="714.9" y="350.0"></text>
</g>
<g>
<title>java/util/Collections.addAll (1 samples, 0.51%)</title><rect x="711.9" y="323.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="714.9" y="334.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.51%)</title><rect x="711.9" y="307.0" width="6.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="714.9" y="318.0"></text>
</g>
<g>
<title>java/util/ArrayList.add (1 samples, 0.51%)</title><rect x="711.9" y="291.0" width="6.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="714.9" y="302.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.51%)</title><rect x="711.9" y="275.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="714.9" y="286.0"></text>
</g>
<g>
<title>java/util/ArrayList.grow (1 samples, 0.51%)</title><rect x="711.9" y="259.0" width="6.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="714.9" y="270.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.51%)</title><rect x="711.9" y="243.0" width="6.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="714.9" y="254.0"></text>
</g>
<g>
<title>java.lang.Object[] (1 samples, 0.51%)</title><rect x="711.9" y="227.0" width="6.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="714.9" y="238.0"></text>
</g>
<g>
<title>java/util/stream/Stream.of (1 samples, 0.51%)</title><rect x="718.0" y="339.0" width="6.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="721.0" y="350.0"></text>
</g>
<g>
<title>java.util.stream.Streams$StreamBuilderImpl (1 samples, 0.51%)</title><rect x="718.0" y="323.0" width="6.1" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="721.0" y="334.0"></text>
</g>
<g>
<title>java/io/StringWriter.write (2 samples, 1.03%)</title><rect x="724.1" y="435.0" width="12.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="727.1" y="446.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.append (2 samples, 1.03%)</title><rect x="724.1" y="419.0" width="12.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="727.1" y="430.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (2 samples, 1.03%)</title><rect x="724.1" y="403.0" width="12.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="727.1" y="414.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 1.03%)</title><rect x="724.1" y="387.0" width="12.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="727.1" y="398.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 1.03%)</title><rect x="724.1" y="371.0" width="12.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="727.1" y="382.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.51%)</title><rect x="724.1" y="355.0" width="6.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="727.1" y="366.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.51%)</title><rect x="730.1" y="355.0" width="6.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="733.1" y="366.0"></text>
</g>
<g>
<title>io/netty/buffer/Unpooled.copiedBuffer (2 samples, 1.03%)</title><rect x="736.2" y="483.0" width="12.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="739.2" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/Unpooled.copiedBuffer (2 samples, 1.03%)</title><rect x="736.2" y="467.0" width="12.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="739.2" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/ByteBufUtil.encodeString0 (2 samples, 1.03%)</title><rect x="736.2" y="451.0" width="12.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="739.2" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.heapBuffer (2 samples, 1.03%)</title><rect x="736.2" y="435.0" width="12.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="739.2" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.heapBuffer (2 samples, 1.03%)</title><rect x="736.2" y="419.0" width="12.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="739.2" y="430.0"></text>
</g>
<g>
<title>io/netty/buffer/UnpooledByteBufAllocator.newHeapBuffer (2 samples, 1.03%)</title><rect x="736.2" y="403.0" width="12.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="739.2" y="414.0"></text>
</g>
<g>
<title>io/netty/buffer/UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf.&lt;init&gt; (2 samples, 1.03%)</title><rect x="736.2" y="387.0" width="12.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="739.2" y="398.0"></text>
</g>
<g>
<title>io/netty/buffer/UnpooledUnsafeHeapByteBuf.&lt;init&gt; (2 samples, 1.03%)</title><rect x="736.2" y="371.0" width="12.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="739.2" y="382.0"></text>
</g>
<g>
<title>io/netty/buffer/UnpooledHeapByteBuf.&lt;init&gt; (2 samples, 1.03%)</title><rect x="736.2" y="355.0" width="12.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="739.2" y="366.0"></text>
</g>
<g>
<title>io/netty/buffer/UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf.allocateArray (2 samples, 1.03%)</title><rect x="736.2" y="339.0" width="12.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="739.2" y="350.0"></text>
</g>
<g>
<title>io/netty/buffer/UnpooledUnsafeHeapByteBuf.allocateArray (2 samples, 1.03%)</title><rect x="736.2" y="323.0" width="12.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="739.2" y="334.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.allocateUninitializedArray (2 samples, 1.03%)</title><rect x="736.2" y="307.0" width="12.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="739.2" y="318.0"></text>
</g>
<g>
<title>byte[] (2 samples, 1.03%)</title><rect x="736.2" y="291.0" width="12.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="739.2" y="302.0"></text>
</g>
<g>
<title>[epollEventLoopGroup-3-2 tid=22024] (3 samples, 1.54%)</title><rect x="748.3" y="963.0" width="18.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="751.3" y="974.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3 samples, 1.54%)</title><rect x="748.3" y="947.0" width="18.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="751.3" y="958.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocalRunnable.run (3 samples, 1.54%)</title><rect x="748.3" y="931.0" width="18.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="751.3" y="942.0"></text>
</g>
<g>
<title>io/netty/util/internal/ThreadExecutorMap$2.run (3 samples, 1.54%)</title><rect x="748.3" y="915.0" width="18.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="751.3" y="926.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor$5.run (3 samples, 1.54%)</title><rect x="748.3" y="899.0" width="18.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="751.3" y="910.0"></text>
</g>
<g>
<title>io/netty/channel/epoll/EpollEventLoop.run (3 samples, 1.54%)</title><rect x="748.3" y="883.0" width="18.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="751.3" y="894.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.runAllTasks (3 samples, 1.54%)</title><rect x="748.3" y="867.0" width="18.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="751.3" y="878.0"></text>
</g>
<g>
<title>io/netty/util/concurrent/AbstractEventExecutor.safeExecute (3 samples, 1.54%)</title><rect x="748.3" y="851.0" width="18.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="751.3" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$AbstractWriteTask.run (3 samples, 1.54%)</title><rect x="748.3" y="835.0" width="18.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="751.3" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$AbstractWriteTask.write (3 samples, 1.54%)</title><rect x="748.3" y="819.0" width="18.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="751.3" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.access$1700 (3 samples, 1.54%)</title><rect x="748.3" y="803.0" width="18.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="751.3" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite (3 samples, 1.54%)</title><rect x="748.3" y="787.0" width="18.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="751.3" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (3 samples, 1.54%)</title><rect x="748.3" y="771.0" width="18.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="751.3" y="782.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/netty/SlowConsumerDisconnectHandler.write (3 samples, 1.54%)</title><rect x="748.3" y="755.0" width="18.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="751.3" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.writeAndFlush (3 samples, 1.54%)</title><rect x="748.3" y="739.0" width="18.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="751.3" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.newPromise (3 samples, 1.54%)</title><rect x="748.3" y="723.0" width="18.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="751.3" y="734.0"></text>
</g>
<g>
<title>io.netty.channel.DefaultChannelPromise (3 samples, 1.54%)</title><rect x="748.3" y="707.0" width="18.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="751.3" y="718.0"></text>
</g>
<g>
<title>[epollEventLoopGroup-3-3 tid=22053] (5 samples, 2.56%)</title><rect x="766.4" y="963.0" width="30.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="769.4" y="974.0">[e..</text>
</g>
<g>
<title>java/lang/Thread.run (5 samples, 2.56%)</title><rect x="766.4" y="947.0" width="30.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="769.4" y="958.0">ja..</text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocalRunnable.run (5 samples, 2.56%)</title><rect x="766.4" y="931.0" width="30.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="769.4" y="942.0">io..</text>
</g>
<g>
<title>io/netty/util/internal/ThreadExecutorMap$2.run (5 samples, 2.56%)</title><rect x="766.4" y="915.0" width="30.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="769.4" y="926.0">io..</text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor$5.run (5 samples, 2.56%)</title><rect x="766.4" y="899.0" width="30.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="769.4" y="910.0">io..</text>
</g>
<g>
<title>io/netty/channel/epoll/EpollEventLoop.run (5 samples, 2.56%)</title><rect x="766.4" y="883.0" width="30.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="769.4" y="894.0">io..</text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor.runAllTasks (5 samples, 2.56%)</title><rect x="766.4" y="867.0" width="30.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="769.4" y="878.0">io..</text>
</g>
<g>
<title>io/netty/util/concurrent/AbstractEventExecutor.safeExecute (5 samples, 2.56%)</title><rect x="766.4" y="851.0" width="30.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="769.4" y="862.0">io..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$AbstractWriteTask.run (5 samples, 2.56%)</title><rect x="766.4" y="835.0" width="30.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="769.4" y="846.0">io..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$AbstractWriteTask.write (5 samples, 2.56%)</title><rect x="766.4" y="819.0" width="30.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="769.4" y="830.0">io..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.access$1700 (5 samples, 2.56%)</title><rect x="766.4" y="803.0" width="30.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="769.4" y="814.0">io..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite (5 samples, 2.56%)</title><rect x="766.4" y="787.0" width="30.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="769.4" y="798.0">io..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (5 samples, 2.56%)</title><rect x="766.4" y="771.0" width="30.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="769.4" y="782.0">io..</text>
</g>
<g>
<title>pbouda/broadcaster/server/netty/SlowConsumerDisconnectHandler.write (5 samples, 2.56%)</title><rect x="766.4" y="755.0" width="30.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="769.4" y="766.0">pb..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.writeAndFlush (5 samples, 2.56%)</title><rect x="766.4" y="739.0" width="30.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="769.4" y="750.0">io..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.newPromise (1 samples, 0.51%)</title><rect x="766.4" y="723.0" width="6.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="769.4" y="734.0"></text>
</g>
<g>
<title>io.netty.channel.DefaultChannelPromise (1 samples, 0.51%)</title><rect x="766.4" y="707.0" width="6.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="769.4" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.writeAndFlush (4 samples, 2.05%)</title><rect x="772.5" y="723.0" width="24.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="775.5" y="734.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (4 samples, 2.05%)</title><rect x="772.5" y="707.0" width="24.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="775.5" y="718.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWriteAndFlush (4 samples, 2.05%)</title><rect x="772.5" y="691.0" width="24.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="775.5" y="702.0">i..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush0 (2 samples, 1.03%)</title><rect x="772.5" y="675.0" width="12.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="775.5" y="686.0"></text>
</g>
<g>
<title>io/netty/handler/stream/ChunkedWriteHandler.flush (2 samples, 1.03%)</title><rect x="772.5" y="659.0" width="12.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="775.5" y="670.0"></text>
</g>
<g>
<title>io/netty/handler/stream/ChunkedWriteHandler.doFlush (2 samples, 1.03%)</title><rect x="772.5" y="643.0" width="12.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="775.5" y="654.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.flush (1 samples, 0.51%)</title><rect x="772.5" y="627.0" width="6.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="775.5" y="638.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush (1 samples, 0.51%)</title><rect x="772.5" y="611.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="775.5" y="622.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeFlush0 (1 samples, 0.51%)</title><rect x="772.5" y="595.0" width="6.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="775.5" y="606.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.flush (1 samples, 0.51%)</title><rect x="772.5" y="579.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="775.5" y="590.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.flush (1 samples, 0.51%)</title><rect x="772.5" y="563.0" width="6.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="775.5" y="574.0"></text>
</g>
<g>
<title>io/netty/channel/epoll/AbstractEpollChannel$AbstractEpollUnsafe.flush0 (1 samples, 0.51%)</title><rect x="772.5" y="547.0" width="6.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="775.5" y="558.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel$AbstractUnsafe.flush0 (1 samples, 0.51%)</title><rect x="772.5" y="531.0" width="6.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="775.5" y="542.0"></text>
</g>
<g>
<title>io/netty/channel/epoll/AbstractEpollStreamChannel.doWrite (1 samples, 0.51%)</title><rect x="772.5" y="515.0" width="6.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="775.5" y="526.0"></text>
</g>
<g>
<title>io/netty/channel/epoll/AbstractEpollStreamChannel.doWriteSingle (1 samples, 0.51%)</title><rect x="772.5" y="499.0" width="6.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="775.5" y="510.0"></text>
</g>
<g>
<title>io/netty/channel/epoll/AbstractEpollStreamChannel.writeBytes (1 samples, 0.51%)</title><rect x="772.5" y="483.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="775.5" y="494.0"></text>
</g>
<g>
<title>io/netty/channel/epoll/AbstractEpollChannel.doWriteBytes (1 samples, 0.51%)</title><rect x="772.5" y="467.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="775.5" y="478.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.removeBytes (1 samples, 0.51%)</title><rect x="772.5" y="451.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="775.5" y="462.0"></text>
</g>
<g>
<title>io/netty/channel/ChannelOutboundBuffer.remove (1 samples, 0.51%)</title><rect x="772.5" y="435.0" width="6.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="775.5" y="446.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.safeRelease (1 samples, 0.51%)</title><rect x="772.5" y="419.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="775.5" y="430.0"></text>
</g>
<g>
<title>io/netty/util/ReferenceCountUtil.release (1 samples, 0.51%)</title><rect x="772.5" y="403.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="775.5" y="414.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.release (1 samples, 0.51%)</title><rect x="772.5" y="387.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="775.5" y="398.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractReferenceCountedByteBuf.handleRelease (1 samples, 0.51%)</title><rect x="772.5" y="371.0" width="6.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="775.5" y="382.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.deallocate (1 samples, 0.51%)</title><rect x="772.5" y="355.0" width="6.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="775.5" y="366.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.free (1 samples, 0.51%)</title><rect x="772.5" y="339.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="775.5" y="350.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache.add (1 samples, 0.51%)</title><rect x="772.5" y="323.0" width="6.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="775.5" y="334.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.add (1 samples, 0.51%)</title><rect x="772.5" y="307.0" width="6.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="775.5" y="318.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache.newEntry (1 samples, 0.51%)</title><rect x="772.5" y="291.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="775.5" y="302.0"></text>
</g>
<g>
<title>io/netty/util/Recycler.get (1 samples, 0.51%)</title><rect x="772.5" y="275.0" width="6.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="775.5" y="286.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache$1.newObject (1 samples, 0.51%)</title><rect x="772.5" y="259.0" width="6.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="775.5" y="270.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolThreadCache$MemoryRegionCache$1.newObject (1 samples, 0.51%)</title><rect x="772.5" y="243.0" width="6.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="775.5" y="254.0"></text>
</g>
<g>
<title>io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry (1 samples, 0.51%)</title><rect x="772.5" y="227.0" width="6.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="775.5" y="238.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (1 samples, 0.51%)</title><rect x="778.5" y="627.0" width="6.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="781.5" y="638.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (1 samples, 0.51%)</title><rect x="778.5" y="611.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="781.5" y="622.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite (1 samples, 0.51%)</title><rect x="778.5" y="595.0" width="6.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="781.5" y="606.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (1 samples, 0.51%)</title><rect x="778.5" y="579.0" width="6.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="781.5" y="590.0"></text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageEncoder.write (1 samples, 0.51%)</title><rect x="778.5" y="563.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="781.5" y="574.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/websocketx/WebSocket08FrameEncoder.encode (1 samples, 0.51%)</title><rect x="778.5" y="547.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="781.5" y="558.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/websocketx/WebSocket08FrameEncoder.encode (1 samples, 0.51%)</title><rect x="778.5" y="531.0" width="6.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="781.5" y="542.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.buffer (1 samples, 0.51%)</title><rect x="778.5" y="515.0" width="6.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="781.5" y="526.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (1 samples, 0.51%)</title><rect x="778.5" y="499.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="781.5" y="510.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (1 samples, 0.51%)</title><rect x="778.5" y="483.0" width="6.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="781.5" y="494.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (1 samples, 0.51%)</title><rect x="778.5" y="467.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="781.5" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.toLeakAwareBuffer (1 samples, 0.51%)</title><rect x="778.5" y="451.0" width="6.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="781.5" y="462.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track (1 samples, 0.51%)</title><rect x="778.5" y="435.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="781.5" y="446.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector.track0 (1 samples, 0.51%)</title><rect x="778.5" y="419.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="781.5" y="430.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$DefaultResourceLeak.&lt;init&gt; (1 samples, 0.51%)</title><rect x="778.5" y="403.0" width="6.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="781.5" y="414.0"></text>
</g>
<g>
<title>io/netty/util/ResourceLeakDetector$Record.&lt;init&gt; (1 samples, 0.51%)</title><rect x="778.5" y="387.0" width="6.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="781.5" y="398.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.51%)</title><rect x="778.5" y="371.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="781.5" y="382.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.51%)</title><rect x="778.5" y="355.0" width="6.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="781.5" y="366.0"></text>
</g>
<g>
<title>java/lang/Throwable.fillInStackTrace (1 samples, 0.51%)</title><rect x="778.5" y="339.0" width="6.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="781.5" y="350.0"></text>
</g>
<g>
<title>short[] (1 samples, 0.51%)</title><rect x="778.5" y="323.0" width="6.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="781.5" y="334.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeWrite0 (2 samples, 1.03%)</title><rect x="784.6" y="675.0" width="12.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="787.6" y="686.0"></text>
</g>
<g>
<title>io/netty/handler/stream/ChunkedWriteHandler.write (2 samples, 1.03%)</title><rect x="784.6" y="659.0" width="12.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="787.6" y="670.0"></text>
</g>
<g>
<title>io.netty.handler.stream.ChunkedWriteHandler$PendingWrite (2 samples, 1.03%)</title><rect x="784.6" y="643.0" width="12.1" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="787.6" y="654.0"></text>
</g>
<g>
<title>[rabbitmq-consumer-1 tid=21976] (1 samples, 0.51%)</title><rect x="796.7" y="963.0" width="6.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="799.7" y="974.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 0.51%)</title><rect x="796.7" y="947.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="799.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 0.51%)</title><rect x="796.7" y="931.0" width="6.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="799.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 0.51%)</title><rect x="796.7" y="915.0" width="6.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="799.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.51%)</title><rect x="796.7" y="899.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="799.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (1 samples, 0.51%)</title><rect x="796.7" y="883.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="799.7" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/ScheduledThreadPoolExecutor$DelayedWorkQueue.take (1 samples, 0.51%)</title><rect x="796.7" y="867.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="799.7" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.awaitNanos (1 samples, 0.51%)</title><rect x="796.7" y="851.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="799.7" y="862.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferAfterCancelledWait (1 samples, 0.51%)</title><rect x="796.7" y="835.0" width="6.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="799.7" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (1 samples, 0.51%)</title><rect x="796.7" y="819.0" width="6.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="799.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.initializeSyncQueue (1 samples, 0.51%)</title><rect x="796.7" y="803.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="799.7" y="814.0"></text>
</g>
<g>
<title>java.util.concurrent.locks.AbstractQueuedSynchronizer$Node (1 samples, 0.51%)</title><rect x="796.7" y="787.0" width="6.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="799.7" y="798.0"></text>
</g>
<g>
<title>[rabbitmq-consumer-10 tid=21985] (3 samples, 1.54%)</title><rect x="802.7" y="963.0" width="18.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="805.7" y="974.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3 samples, 1.54%)</title><rect x="802.7" y="947.0" width="18.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="805.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3 samples, 1.54%)</title><rect x="802.7" y="931.0" width="18.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="805.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3 samples, 1.54%)</title><rect x="802.7" y="915.0" width="18.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="805.7" y="926.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerWorkService$WorkPoolRunnable.run (3 samples, 1.54%)</title><rect x="802.7" y="899.0" width="18.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="805.7" y="910.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerDispatcher$5.run (2 samples, 1.03%)</title><rect x="802.7" y="883.0" width="12.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="805.7" y="894.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDelivery (2 samples, 1.03%)</title><rect x="802.7" y="867.0" width="12.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="805.7" y="878.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDeliveryInternal (2 samples, 1.03%)</title><rect x="802.7" y="851.0" width="12.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="805.7" y="862.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 1.03%)</title><rect x="802.7" y="835.0" width="12.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="805.7" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 1.03%)</title><rect x="802.7" y="819.0" width="12.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="805.7" y="830.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (2 samples, 1.03%)</title><rect x="802.7" y="803.0" width="12.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="805.7" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (2 samples, 1.03%)</title><rect x="802.7" y="787.0" width="12.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="805.7" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8_0 (2 samples, 1.03%)</title><rect x="802.7" y="771.0" width="12.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="805.7" y="782.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 1.03%)</title><rect x="802.7" y="755.0" width="12.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="805.7" y="766.0"></text>
</g>
<g>
<title>byte[] (2 samples, 1.03%)</title><rect x="802.7" y="739.0" width="12.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="805.7" y="750.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.51%)</title><rect x="814.8" y="883.0" width="6.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="817.8" y="894.0"></text>
</g>
<g>
<title>[rabbitmq-consumer-11 tid=21986] (3 samples, 1.54%)</title><rect x="820.9" y="963.0" width="18.1" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="823.9" y="974.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3 samples, 1.54%)</title><rect x="820.9" y="947.0" width="18.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="823.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3 samples, 1.54%)</title><rect x="820.9" y="931.0" width="18.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="823.9" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3 samples, 1.54%)</title><rect x="820.9" y="915.0" width="18.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="823.9" y="926.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerWorkService$WorkPoolRunnable.run (3 samples, 1.54%)</title><rect x="820.9" y="899.0" width="18.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="823.9" y="910.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerDispatcher$5.run (2 samples, 1.03%)</title><rect x="820.9" y="883.0" width="12.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="823.9" y="894.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDelivery (2 samples, 1.03%)</title><rect x="820.9" y="867.0" width="12.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="823.9" y="878.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDeliveryInternal (2 samples, 1.03%)</title><rect x="820.9" y="851.0" width="12.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="823.9" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 0.51%)</title><rect x="820.9" y="835.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="823.9" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 0.51%)</title><rect x="820.9" y="819.0" width="6.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="823.9" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 0.51%)</title><rect x="820.9" y="803.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="823.9" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel.write (1 samples, 0.51%)</title><rect x="820.9" y="787.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="823.9" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.write (1 samples, 0.51%)</title><rect x="820.9" y="771.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="823.9" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (1 samples, 0.51%)</title><rect x="820.9" y="755.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="823.9" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.newPromise (1 samples, 0.51%)</title><rect x="820.9" y="739.0" width="6.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="823.9" y="750.0"></text>
</g>
<g>
<title>io.netty.channel.DefaultChannelPromise (1 samples, 0.51%)</title><rect x="820.9" y="723.0" width="6.0" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="823.9" y="734.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.51%)</title><rect x="826.9" y="835.0" width="6.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="829.9" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.51%)</title><rect x="826.9" y="819.0" width="6.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="829.9" y="830.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (1 samples, 0.51%)</title><rect x="826.9" y="803.0" width="6.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="829.9" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (1 samples, 0.51%)</title><rect x="826.9" y="787.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="829.9" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8_0 (1 samples, 0.51%)</title><rect x="826.9" y="771.0" width="6.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="829.9" y="782.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.51%)</title><rect x="826.9" y="755.0" width="6.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="829.9" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.51%)</title><rect x="833.0" y="883.0" width="6.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="836.0" y="894.0"></text>
</g>
<g>
<title>[rabbitmq-consumer-12 tid=21987] (3 samples, 1.54%)</title><rect x="839.0" y="963.0" width="18.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="842.0" y="974.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3 samples, 1.54%)</title><rect x="839.0" y="947.0" width="18.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="842.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3 samples, 1.54%)</title><rect x="839.0" y="931.0" width="18.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="842.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3 samples, 1.54%)</title><rect x="839.0" y="915.0" width="18.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="842.0" y="926.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerWorkService$WorkPoolRunnable.run (3 samples, 1.54%)</title><rect x="839.0" y="899.0" width="18.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="842.0" y="910.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerDispatcher$5.run (2 samples, 1.03%)</title><rect x="839.0" y="883.0" width="12.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="842.0" y="894.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDelivery (2 samples, 1.03%)</title><rect x="839.0" y="867.0" width="12.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="842.0" y="878.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDeliveryInternal (2 samples, 1.03%)</title><rect x="839.0" y="851.0" width="12.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="842.0" y="862.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 1.03%)</title><rect x="839.0" y="835.0" width="12.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="842.0" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 1.03%)</title><rect x="839.0" y="819.0" width="12.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="842.0" y="830.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (2 samples, 1.03%)</title><rect x="839.0" y="803.0" width="12.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="842.0" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (2 samples, 1.03%)</title><rect x="839.0" y="787.0" width="12.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="842.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8_0 (2 samples, 1.03%)</title><rect x="839.0" y="771.0" width="12.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="842.0" y="782.0"></text>
</g>
<g>
<title>byte[] (2 samples, 1.03%)</title><rect x="839.0" y="755.0" width="12.1" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="842.0" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.51%)</title><rect x="851.1" y="883.0" width="6.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="854.1" y="894.0"></text>
</g>
<g>
<title>[rabbitmq-consumer-13 tid=21988] (5 samples, 2.56%)</title><rect x="857.2" y="963.0" width="30.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="860.2" y="974.0">[r..</text>
</g>
<g>
<title>java/lang/Thread.run (5 samples, 2.56%)</title><rect x="857.2" y="947.0" width="30.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="860.2" y="958.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (5 samples, 2.56%)</title><rect x="857.2" y="931.0" width="30.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="860.2" y="942.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (5 samples, 2.56%)</title><rect x="857.2" y="915.0" width="30.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="860.2" y="926.0">ja..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerWorkService$WorkPoolRunnable.run (5 samples, 2.56%)</title><rect x="857.2" y="899.0" width="30.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="860.2" y="910.0">co..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerDispatcher$5.run (4 samples, 2.05%)</title><rect x="857.2" y="883.0" width="24.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="860.2" y="894.0">c..</text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDelivery (4 samples, 2.05%)</title><rect x="857.2" y="867.0" width="24.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="860.2" y="878.0">p..</text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDeliveryInternal (4 samples, 2.05%)</title><rect x="857.2" y="851.0" width="24.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="860.2" y="862.0">p..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 2.05%)</title><rect x="857.2" y="835.0" width="24.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="860.2" y="846.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 2.05%)</title><rect x="857.2" y="819.0" width="24.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="860.2" y="830.0">j..</text>
</g>
<g>
<title>java/lang/StringCoding.decode (4 samples, 2.05%)</title><rect x="857.2" y="803.0" width="24.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="860.2" y="814.0">j..</text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (4 samples, 2.05%)</title><rect x="857.2" y="787.0" width="24.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="860.2" y="798.0">j..</text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8_0 (4 samples, 2.05%)</title><rect x="857.2" y="771.0" width="24.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="860.2" y="782.0">j..</text>
</g>
<g>
<title>byte[] (4 samples, 2.05%)</title><rect x="857.2" y="755.0" width="24.2" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="860.2" y="766.0">b..</text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.51%)</title><rect x="881.4" y="883.0" width="6.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="884.4" y="894.0"></text>
</g>
<g>
<title>[rabbitmq-consumer-14 tid=21989] (5 samples, 2.56%)</title><rect x="887.4" y="963.0" width="30.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="890.4" y="974.0">[r..</text>
</g>
<g>
<title>java/lang/Thread.run (5 samples, 2.56%)</title><rect x="887.4" y="947.0" width="30.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="890.4" y="958.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (5 samples, 2.56%)</title><rect x="887.4" y="931.0" width="30.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="890.4" y="942.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (5 samples, 2.56%)</title><rect x="887.4" y="915.0" width="30.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="890.4" y="926.0">ja..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerWorkService$WorkPoolRunnable.run (5 samples, 2.56%)</title><rect x="887.4" y="899.0" width="30.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="890.4" y="910.0">co..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerDispatcher$5.run (5 samples, 2.56%)</title><rect x="887.4" y="883.0" width="30.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="890.4" y="894.0">co..</text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDelivery (5 samples, 2.56%)</title><rect x="887.4" y="867.0" width="30.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="890.4" y="878.0">pb..</text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDeliveryInternal (5 samples, 2.56%)</title><rect x="887.4" y="851.0" width="30.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="890.4" y="862.0">pb..</text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.buffer (1 samples, 0.51%)</title><rect x="887.4" y="835.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="890.4" y="846.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (1 samples, 0.51%)</title><rect x="887.4" y="819.0" width="6.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="890.4" y="830.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (1 samples, 0.51%)</title><rect x="887.4" y="803.0" width="6.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="890.4" y="814.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (1 samples, 0.51%)</title><rect x="887.4" y="787.0" width="6.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="890.4" y="798.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (1 samples, 0.51%)</title><rect x="887.4" y="771.0" width="6.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="890.4" y="782.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena$DirectArena.newByteBuf (1 samples, 0.51%)</title><rect x="887.4" y="755.0" width="6.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="890.4" y="766.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.newInstance (1 samples, 0.51%)</title><rect x="887.4" y="739.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="890.4" y="750.0"></text>
</g>
<g>
<title>io/netty/util/Recycler.get (1 samples, 0.51%)</title><rect x="887.4" y="723.0" width="6.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="890.4" y="734.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf$1.newObject (1 samples, 0.51%)</title><rect x="887.4" y="707.0" width="6.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="890.4" y="718.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf$1.newObject (1 samples, 0.51%)</title><rect x="887.4" y="691.0" width="6.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="890.4" y="702.0"></text>
</g>
<g>
<title>io.netty.buffer.PooledUnsafeDirectByteBuf (1 samples, 0.51%)</title><rect x="887.4" y="675.0" width="6.1" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="890.4" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 0.51%)</title><rect x="893.5" y="835.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="896.5" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 0.51%)</title><rect x="893.5" y="819.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="896.5" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 0.51%)</title><rect x="893.5" y="803.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="896.5" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroupFuture.&lt;init&gt; (1 samples, 0.51%)</title><rect x="893.5" y="787.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="896.5" y="798.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (1 samples, 0.51%)</title><rect x="893.5" y="771.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="896.5" y="782.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (1 samples, 0.51%)</title><rect x="893.5" y="755.0" width="6.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="896.5" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 1.54%)</title><rect x="899.5" y="835.0" width="18.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="902.5" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 1.54%)</title><rect x="899.5" y="819.0" width="18.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="902.5" y="830.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (3 samples, 1.54%)</title><rect x="899.5" y="803.0" width="18.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="902.5" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (3 samples, 1.54%)</title><rect x="899.5" y="787.0" width="18.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="902.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8_0 (3 samples, 1.54%)</title><rect x="899.5" y="771.0" width="18.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="902.5" y="782.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.51%)</title><rect x="899.5" y="755.0" width="6.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="902.5" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 1.03%)</title><rect x="905.6" y="755.0" width="12.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="908.6" y="766.0"></text>
</g>
<g>
<title>byte[] (2 samples, 1.03%)</title><rect x="905.6" y="739.0" width="12.1" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="908.6" y="750.0"></text>
</g>
<g>
<title>[rabbitmq-consumer-15 tid=21990] (4 samples, 2.05%)</title><rect x="917.7" y="963.0" width="24.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="920.7" y="974.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (4 samples, 2.05%)</title><rect x="917.7" y="947.0" width="24.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="920.7" y="958.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4 samples, 2.05%)</title><rect x="917.7" y="931.0" width="24.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="920.7" y="942.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4 samples, 2.05%)</title><rect x="917.7" y="915.0" width="24.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="920.7" y="926.0">j..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerWorkService$WorkPoolRunnable.run (4 samples, 2.05%)</title><rect x="917.7" y="899.0" width="24.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="920.7" y="910.0">c..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerDispatcher$5.run (3 samples, 1.54%)</title><rect x="917.7" y="883.0" width="18.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="920.7" y="894.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDelivery (3 samples, 1.54%)</title><rect x="917.7" y="867.0" width="18.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="920.7" y="878.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDeliveryInternal (3 samples, 1.54%)</title><rect x="917.7" y="851.0" width="18.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="920.7" y="862.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 1.54%)</title><rect x="917.7" y="835.0" width="18.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="920.7" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 1.54%)</title><rect x="917.7" y="819.0" width="18.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="920.7" y="830.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (3 samples, 1.54%)</title><rect x="917.7" y="803.0" width="18.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="920.7" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (3 samples, 1.54%)</title><rect x="917.7" y="787.0" width="18.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="920.7" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8_0 (3 samples, 1.54%)</title><rect x="917.7" y="771.0" width="18.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="920.7" y="782.0"></text>
</g>
<g>
<title>byte[] (2 samples, 1.03%)</title><rect x="917.7" y="755.0" width="12.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="920.7" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.51%)</title><rect x="929.8" y="755.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="932.8" y="766.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.51%)</title><rect x="929.8" y="739.0" width="6.0" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="932.8" y="750.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.51%)</title><rect x="935.8" y="883.0" width="6.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="938.8" y="894.0"></text>
</g>
<g>
<title>[rabbitmq-consumer-16 tid=21991] (4 samples, 2.05%)</title><rect x="941.9" y="963.0" width="24.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="944.9" y="974.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (4 samples, 2.05%)</title><rect x="941.9" y="947.0" width="24.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="944.9" y="958.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4 samples, 2.05%)</title><rect x="941.9" y="931.0" width="24.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="944.9" y="942.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4 samples, 2.05%)</title><rect x="941.9" y="915.0" width="24.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="944.9" y="926.0">j..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerWorkService$WorkPoolRunnable.run (4 samples, 2.05%)</title><rect x="941.9" y="899.0" width="24.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="944.9" y="910.0">c..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerDispatcher$5.run (3 samples, 1.54%)</title><rect x="941.9" y="883.0" width="18.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="944.9" y="894.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDelivery (3 samples, 1.54%)</title><rect x="941.9" y="867.0" width="18.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="944.9" y="878.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDeliveryInternal (3 samples, 1.54%)</title><rect x="941.9" y="851.0" width="18.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="944.9" y="862.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.buffer (1 samples, 0.51%)</title><rect x="941.9" y="835.0" width="6.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="944.9" y="846.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (1 samples, 0.51%)</title><rect x="941.9" y="819.0" width="6.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="944.9" y="830.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (1 samples, 0.51%)</title><rect x="941.9" y="803.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="944.9" y="814.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (1 samples, 0.51%)</title><rect x="941.9" y="787.0" width="6.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="944.9" y="798.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (1 samples, 0.51%)</title><rect x="941.9" y="771.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="944.9" y="782.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena$DirectArena.newByteBuf (1 samples, 0.51%)</title><rect x="941.9" y="755.0" width="6.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="944.9" y="766.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.newInstance (1 samples, 0.51%)</title><rect x="941.9" y="739.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="944.9" y="750.0"></text>
</g>
<g>
<title>io/netty/util/Recycler.get (1 samples, 0.51%)</title><rect x="941.9" y="723.0" width="6.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="944.9" y="734.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf$1.newObject (1 samples, 0.51%)</title><rect x="941.9" y="707.0" width="6.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="944.9" y="718.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf$1.newObject (1 samples, 0.51%)</title><rect x="941.9" y="691.0" width="6.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="944.9" y="702.0"></text>
</g>
<g>
<title>io.netty.buffer.PooledUnsafeDirectByteBuf (1 samples, 0.51%)</title><rect x="941.9" y="675.0" width="6.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="944.9" y="686.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 1.03%)</title><rect x="947.9" y="835.0" width="12.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="950.9" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 1.03%)</title><rect x="947.9" y="819.0" width="12.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="950.9" y="830.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (2 samples, 1.03%)</title><rect x="947.9" y="803.0" width="12.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="950.9" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (2 samples, 1.03%)</title><rect x="947.9" y="787.0" width="12.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="950.9" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8_0 (2 samples, 1.03%)</title><rect x="947.9" y="771.0" width="12.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="950.9" y="782.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.51%)</title><rect x="947.9" y="755.0" width="6.1" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="950.9" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.51%)</title><rect x="954.0" y="755.0" width="6.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="957.0" y="766.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.51%)</title><rect x="954.0" y="739.0" width="6.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="957.0" y="750.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.51%)</title><rect x="960.1" y="883.0" width="6.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="963.1" y="894.0"></text>
</g>
<g>
<title>[rabbitmq-consumer-17 tid=21992] (3 samples, 1.54%)</title><rect x="966.1" y="963.0" width="18.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="969.1" y="974.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3 samples, 1.54%)</title><rect x="966.1" y="947.0" width="18.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="969.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3 samples, 1.54%)</title><rect x="966.1" y="931.0" width="18.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="969.1" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3 samples, 1.54%)</title><rect x="966.1" y="915.0" width="18.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="969.1" y="926.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerWorkService$WorkPoolRunnable.run (3 samples, 1.54%)</title><rect x="966.1" y="899.0" width="18.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="969.1" y="910.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerDispatcher$5.run (2 samples, 1.03%)</title><rect x="966.1" y="883.0" width="12.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="969.1" y="894.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDelivery (2 samples, 1.03%)</title><rect x="966.1" y="867.0" width="12.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="969.1" y="878.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDeliveryInternal (2 samples, 1.03%)</title><rect x="966.1" y="851.0" width="12.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="969.1" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 0.51%)</title><rect x="966.1" y="835.0" width="6.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="969.1" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 0.51%)</title><rect x="966.1" y="819.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="969.1" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 0.51%)</title><rect x="966.1" y="803.0" width="6.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="969.1" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.51%)</title><rect x="966.1" y="787.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="969.1" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.51%)</title><rect x="966.1" y="771.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="969.1" y="782.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.newNode (1 samples, 0.51%)</title><rect x="966.1" y="755.0" width="6.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="969.1" y="766.0"></text>
</g>
<g>
<title>java.util.LinkedHashMap$Entry (1 samples, 0.51%)</title><rect x="966.1" y="739.0" width="6.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="969.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.51%)</title><rect x="972.2" y="835.0" width="6.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="975.2" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.51%)</title><rect x="972.2" y="819.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="975.2" y="830.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (1 samples, 0.51%)</title><rect x="972.2" y="803.0" width="6.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="975.2" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (1 samples, 0.51%)</title><rect x="972.2" y="787.0" width="6.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="975.2" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8_0 (1 samples, 0.51%)</title><rect x="972.2" y="771.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="975.2" y="782.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.51%)</title><rect x="972.2" y="755.0" width="6.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="975.2" y="766.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.51%)</title><rect x="972.2" y="739.0" width="6.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="975.2" y="750.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.51%)</title><rect x="978.2" y="883.0" width="6.1" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="981.2" y="894.0"></text>
</g>
<g>
<title>[rabbitmq-consumer-2 tid=21977] (5 samples, 2.56%)</title><rect x="984.3" y="963.0" width="30.2" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="987.3" y="974.0">[r..</text>
</g>
<g>
<title>java/lang/Thread.run (5 samples, 2.56%)</title><rect x="984.3" y="947.0" width="30.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="987.3" y="958.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (5 samples, 2.56%)</title><rect x="984.3" y="931.0" width="30.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="987.3" y="942.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (5 samples, 2.56%)</title><rect x="984.3" y="915.0" width="30.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="987.3" y="926.0">ja..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerWorkService$WorkPoolRunnable.run (5 samples, 2.56%)</title><rect x="984.3" y="899.0" width="30.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="987.3" y="910.0">co..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerDispatcher$5.run (4 samples, 2.05%)</title><rect x="984.3" y="883.0" width="24.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="987.3" y="894.0">c..</text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDelivery (4 samples, 2.05%)</title><rect x="984.3" y="867.0" width="24.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="987.3" y="878.0">p..</text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDeliveryInternal (4 samples, 2.05%)</title><rect x="984.3" y="851.0" width="24.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="987.3" y="862.0">p..</text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 0.51%)</title><rect x="984.3" y="835.0" width="6.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="987.3" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 0.51%)</title><rect x="984.3" y="819.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="987.3" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 0.51%)</title><rect x="984.3" y="803.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="987.3" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.51%)</title><rect x="984.3" y="787.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="987.3" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.51%)</title><rect x="984.3" y="771.0" width="6.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="987.3" y="782.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.newNode (1 samples, 0.51%)</title><rect x="984.3" y="755.0" width="6.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="987.3" y="766.0"></text>
</g>
<g>
<title>java.util.LinkedHashMap$Entry (1 samples, 0.51%)</title><rect x="984.3" y="739.0" width="6.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="987.3" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 1.54%)</title><rect x="990.3" y="835.0" width="18.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="993.3" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 1.54%)</title><rect x="990.3" y="819.0" width="18.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="993.3" y="830.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (3 samples, 1.54%)</title><rect x="990.3" y="803.0" width="18.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="993.3" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (3 samples, 1.54%)</title><rect x="990.3" y="787.0" width="18.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="993.3" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8_0 (3 samples, 1.54%)</title><rect x="990.3" y="771.0" width="18.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="993.3" y="782.0"></text>
</g>
<g>
<title>byte[] (2 samples, 1.03%)</title><rect x="990.3" y="755.0" width="12.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="993.3" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.51%)</title><rect x="1002.4" y="755.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1005.4" y="766.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.51%)</title><rect x="1002.4" y="739.0" width="6.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1005.4" y="750.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.51%)</title><rect x="1008.5" y="883.0" width="6.0" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="1011.5" y="894.0"></text>
</g>
<g>
<title>[rabbitmq-consumer-3 tid=21978] (4 samples, 2.05%)</title><rect x="1014.5" y="963.0" width="24.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1017.5" y="974.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (4 samples, 2.05%)</title><rect x="1014.5" y="947.0" width="24.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1017.5" y="958.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4 samples, 2.05%)</title><rect x="1014.5" y="931.0" width="24.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1017.5" y="942.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4 samples, 2.05%)</title><rect x="1014.5" y="915.0" width="24.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1017.5" y="926.0">j..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerWorkService$WorkPoolRunnable.run (4 samples, 2.05%)</title><rect x="1014.5" y="899.0" width="24.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1017.5" y="910.0">c..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerDispatcher$5.run (3 samples, 1.54%)</title><rect x="1014.5" y="883.0" width="18.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1017.5" y="894.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDelivery (3 samples, 1.54%)</title><rect x="1014.5" y="867.0" width="18.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1017.5" y="878.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDeliveryInternal (3 samples, 1.54%)</title><rect x="1014.5" y="851.0" width="18.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1017.5" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (2 samples, 1.03%)</title><rect x="1014.5" y="835.0" width="12.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1017.5" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (2 samples, 1.03%)</title><rect x="1014.5" y="819.0" width="12.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1017.5" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (2 samples, 1.03%)</title><rect x="1014.5" y="803.0" width="12.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1017.5" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroupFuture.&lt;init&gt; (1 samples, 0.51%)</title><rect x="1014.5" y="787.0" width="6.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1017.5" y="798.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (1 samples, 0.51%)</title><rect x="1014.5" y="771.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1017.5" y="782.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (1 samples, 0.51%)</title><rect x="1014.5" y="755.0" width="6.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1017.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap$ValuesView.iterator (1 samples, 0.51%)</title><rect x="1020.6" y="787.0" width="6.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1023.6" y="798.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentHashMap$ValueIterator (1 samples, 0.51%)</title><rect x="1020.6" y="771.0" width="6.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1023.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.51%)</title><rect x="1026.6" y="835.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1029.6" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.51%)</title><rect x="1026.6" y="819.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1029.6" y="830.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (1 samples, 0.51%)</title><rect x="1026.6" y="803.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1029.6" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (1 samples, 0.51%)</title><rect x="1026.6" y="787.0" width="6.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1029.6" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8_0 (1 samples, 0.51%)</title><rect x="1026.6" y="771.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1029.6" y="782.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.51%)</title><rect x="1026.6" y="755.0" width="6.1" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="1029.6" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.51%)</title><rect x="1032.7" y="883.0" width="6.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="1035.7" y="894.0"></text>
</g>
<g>
<title>[rabbitmq-consumer-4 tid=21979] (4 samples, 2.05%)</title><rect x="1038.7" y="963.0" width="24.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1041.7" y="974.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (4 samples, 2.05%)</title><rect x="1038.7" y="947.0" width="24.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1041.7" y="958.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4 samples, 2.05%)</title><rect x="1038.7" y="931.0" width="24.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1041.7" y="942.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4 samples, 2.05%)</title><rect x="1038.7" y="915.0" width="24.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1041.7" y="926.0">j..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerWorkService$WorkPoolRunnable.run (4 samples, 2.05%)</title><rect x="1038.7" y="899.0" width="24.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1041.7" y="910.0">c..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerDispatcher$5.run (3 samples, 1.54%)</title><rect x="1038.7" y="883.0" width="18.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1041.7" y="894.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDelivery (3 samples, 1.54%)</title><rect x="1038.7" y="867.0" width="18.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1041.7" y="878.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDeliveryInternal (3 samples, 1.54%)</title><rect x="1038.7" y="851.0" width="18.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1041.7" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (3 samples, 1.54%)</title><rect x="1038.7" y="835.0" width="18.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1041.7" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (3 samples, 1.54%)</title><rect x="1038.7" y="819.0" width="18.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1041.7" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (3 samples, 1.54%)</title><rect x="1038.7" y="803.0" width="18.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1041.7" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.safeDuplicate (1 samples, 0.51%)</title><rect x="1038.7" y="787.0" width="6.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1041.7" y="798.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/websocketx/TextWebSocketFrame.retainedDuplicate (1 samples, 0.51%)</title><rect x="1038.7" y="771.0" width="6.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1041.7" y="782.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/websocketx/TextWebSocketFrame.retainedDuplicate (1 samples, 0.51%)</title><rect x="1038.7" y="755.0" width="6.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1041.7" y="766.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/websocketx/WebSocketFrame.retainedDuplicate (1 samples, 0.51%)</title><rect x="1038.7" y="739.0" width="6.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1041.7" y="750.0"></text>
</g>
<g>
<title>io/netty/buffer/DefaultByteBufHolder.retainedDuplicate (1 samples, 0.51%)</title><rect x="1038.7" y="723.0" width="6.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1041.7" y="734.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.retainedDuplicate (1 samples, 0.51%)</title><rect x="1038.7" y="707.0" width="6.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1041.7" y="718.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledDuplicatedByteBuf.newInstance (1 samples, 0.51%)</title><rect x="1038.7" y="691.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1041.7" y="702.0"></text>
</g>
<g>
<title>io/netty/util/Recycler.get (1 samples, 0.51%)</title><rect x="1038.7" y="675.0" width="6.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1041.7" y="686.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledDuplicatedByteBuf$1.newObject (1 samples, 0.51%)</title><rect x="1038.7" y="659.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1041.7" y="670.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledDuplicatedByteBuf$1.newObject (1 samples, 0.51%)</title><rect x="1038.7" y="643.0" width="6.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1041.7" y="654.0"></text>
</g>
<g>
<title>io.netty.buffer.PooledDuplicatedByteBuf (1 samples, 0.51%)</title><rect x="1038.7" y="627.0" width="6.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1041.7" y="638.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroupFuture.&lt;init&gt; (1 samples, 0.51%)</title><rect x="1044.8" y="787.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1047.8" y="798.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (1 samples, 0.51%)</title><rect x="1044.8" y="771.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1047.8" y="782.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableCollection$1 (1 samples, 0.51%)</title><rect x="1044.8" y="755.0" width="6.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="1047.8" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.51%)</title><rect x="1050.8" y="787.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1053.8" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.51%)</title><rect x="1050.8" y="771.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1053.8" y="782.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap.newNode (1 samples, 0.51%)</title><rect x="1050.8" y="755.0" width="6.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1053.8" y="766.0"></text>
</g>
<g>
<title>java.util.LinkedHashMap$Entry (1 samples, 0.51%)</title><rect x="1050.8" y="739.0" width="6.1" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="1053.8" y="750.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.51%)</title><rect x="1056.9" y="883.0" width="6.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1059.9" y="894.0"></text>
</g>
<g>
<title>[rabbitmq-consumer-5 tid=21980] (5 samples, 2.56%)</title><rect x="1062.9" y="963.0" width="30.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1065.9" y="974.0">[r..</text>
</g>
<g>
<title>java/lang/Thread.run (5 samples, 2.56%)</title><rect x="1062.9" y="947.0" width="30.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1065.9" y="958.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (5 samples, 2.56%)</title><rect x="1062.9" y="931.0" width="30.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1065.9" y="942.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (5 samples, 2.56%)</title><rect x="1062.9" y="915.0" width="30.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1065.9" y="926.0">ja..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerWorkService$WorkPoolRunnable.run (5 samples, 2.56%)</title><rect x="1062.9" y="899.0" width="30.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1065.9" y="910.0">co..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerDispatcher$5.run (4 samples, 2.05%)</title><rect x="1062.9" y="883.0" width="24.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1065.9" y="894.0">c..</text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDelivery (4 samples, 2.05%)</title><rect x="1062.9" y="867.0" width="24.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1065.9" y="878.0">p..</text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDeliveryInternal (4 samples, 2.05%)</title><rect x="1062.9" y="851.0" width="24.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1065.9" y="862.0">p..</text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.buffer (1 samples, 0.51%)</title><rect x="1062.9" y="835.0" width="6.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1065.9" y="846.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (1 samples, 0.51%)</title><rect x="1062.9" y="819.0" width="6.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1065.9" y="830.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.directBuffer (1 samples, 0.51%)</title><rect x="1062.9" y="803.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1065.9" y="814.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBufAllocator.newDirectBuffer (1 samples, 0.51%)</title><rect x="1062.9" y="787.0" width="6.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1065.9" y="798.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena.allocate (1 samples, 0.51%)</title><rect x="1062.9" y="771.0" width="6.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1065.9" y="782.0"></text>
</g>
<g>
<title>io/netty/buffer/PoolArena$DirectArena.newByteBuf (1 samples, 0.51%)</title><rect x="1062.9" y="755.0" width="6.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1065.9" y="766.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf.newInstance (1 samples, 0.51%)</title><rect x="1062.9" y="739.0" width="6.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1065.9" y="750.0"></text>
</g>
<g>
<title>io/netty/util/Recycler.get (1 samples, 0.51%)</title><rect x="1062.9" y="723.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1065.9" y="734.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf$1.newObject (1 samples, 0.51%)</title><rect x="1062.9" y="707.0" width="6.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1065.9" y="718.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledUnsafeDirectByteBuf$1.newObject (1 samples, 0.51%)</title><rect x="1062.9" y="691.0" width="6.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1065.9" y="702.0"></text>
</g>
<g>
<title>io.netty.buffer.PooledUnsafeDirectByteBuf (1 samples, 0.51%)</title><rect x="1062.9" y="675.0" width="6.1" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1065.9" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 0.51%)</title><rect x="1069.0" y="835.0" width="6.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1072.0" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 0.51%)</title><rect x="1069.0" y="819.0" width="6.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1072.0" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 0.51%)</title><rect x="1069.0" y="803.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1072.0" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroupFuture.&lt;init&gt; (1 samples, 0.51%)</title><rect x="1069.0" y="787.0" width="6.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1072.0" y="798.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (1 samples, 0.51%)</title><rect x="1069.0" y="771.0" width="6.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1072.0" y="782.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (1 samples, 0.51%)</title><rect x="1069.0" y="755.0" width="6.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1072.0" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 1.03%)</title><rect x="1075.0" y="835.0" width="12.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1078.0" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 1.03%)</title><rect x="1075.0" y="819.0" width="12.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1078.0" y="830.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (2 samples, 1.03%)</title><rect x="1075.0" y="803.0" width="12.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1078.0" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (2 samples, 1.03%)</title><rect x="1075.0" y="787.0" width="12.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1078.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8_0 (2 samples, 1.03%)</title><rect x="1075.0" y="771.0" width="12.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1078.0" y="782.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.51%)</title><rect x="1075.0" y="755.0" width="6.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1078.0" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.51%)</title><rect x="1081.1" y="755.0" width="6.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1084.1" y="766.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.51%)</title><rect x="1081.1" y="739.0" width="6.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1084.1" y="750.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.51%)</title><rect x="1087.1" y="883.0" width="6.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1090.1" y="894.0"></text>
</g>
<g>
<title>[rabbitmq-consumer-6 tid=21981] (4 samples, 2.05%)</title><rect x="1093.2" y="963.0" width="24.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1096.2" y="974.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (4 samples, 2.05%)</title><rect x="1093.2" y="947.0" width="24.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1096.2" y="958.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4 samples, 2.05%)</title><rect x="1093.2" y="931.0" width="24.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1096.2" y="942.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4 samples, 2.05%)</title><rect x="1093.2" y="915.0" width="24.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1096.2" y="926.0">j..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerWorkService$WorkPoolRunnable.run (4 samples, 2.05%)</title><rect x="1093.2" y="899.0" width="24.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1096.2" y="910.0">c..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerDispatcher$5.run (3 samples, 1.54%)</title><rect x="1093.2" y="883.0" width="18.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1096.2" y="894.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDelivery (3 samples, 1.54%)</title><rect x="1093.2" y="867.0" width="18.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1096.2" y="878.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDeliveryInternal (3 samples, 1.54%)</title><rect x="1093.2" y="851.0" width="18.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1096.2" y="862.0"></text>
</g>
<g>
<title>io.netty.handler.codec.http.websocketx.TextWebSocketFrame (1 samples, 0.51%)</title><rect x="1093.2" y="835.0" width="6.0" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="1096.2" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 0.51%)</title><rect x="1099.2" y="835.0" width="6.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1102.2" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 0.51%)</title><rect x="1099.2" y="819.0" width="6.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1102.2" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 0.51%)</title><rect x="1099.2" y="803.0" width="6.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1102.2" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroupFuture.&lt;init&gt; (1 samples, 0.51%)</title><rect x="1099.2" y="787.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1102.2" y="798.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (1 samples, 0.51%)</title><rect x="1099.2" y="771.0" width="6.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1102.2" y="782.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (1 samples, 0.51%)</title><rect x="1099.2" y="755.0" width="6.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1102.2" y="766.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap$LinkedValues.iterator (1 samples, 0.51%)</title><rect x="1099.2" y="739.0" width="6.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1102.2" y="750.0"></text>
</g>
<g>
<title>java.util.LinkedHashMap$LinkedValueIterator (1 samples, 0.51%)</title><rect x="1099.2" y="723.0" width="6.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1102.2" y="734.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.51%)</title><rect x="1105.3" y="835.0" width="6.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1108.3" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.51%)</title><rect x="1105.3" y="819.0" width="6.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1108.3" y="830.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (1 samples, 0.51%)</title><rect x="1105.3" y="803.0" width="6.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1108.3" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (1 samples, 0.51%)</title><rect x="1105.3" y="787.0" width="6.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1108.3" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8_0 (1 samples, 0.51%)</title><rect x="1105.3" y="771.0" width="6.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1108.3" y="782.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.51%)</title><rect x="1105.3" y="755.0" width="6.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1108.3" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.51%)</title><rect x="1111.3" y="883.0" width="6.1" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="1114.3" y="894.0"></text>
</g>
<g>
<title>[rabbitmq-consumer-7 tid=21982] (4 samples, 2.05%)</title><rect x="1117.4" y="963.0" width="24.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1120.4" y="974.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (4 samples, 2.05%)</title><rect x="1117.4" y="947.0" width="24.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1120.4" y="958.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4 samples, 2.05%)</title><rect x="1117.4" y="931.0" width="24.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1120.4" y="942.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4 samples, 2.05%)</title><rect x="1117.4" y="915.0" width="24.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1120.4" y="926.0">j..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerWorkService$WorkPoolRunnable.run (4 samples, 2.05%)</title><rect x="1117.4" y="899.0" width="24.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1120.4" y="910.0">c..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerDispatcher$5.run (3 samples, 1.54%)</title><rect x="1117.4" y="883.0" width="18.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1120.4" y="894.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDelivery (3 samples, 1.54%)</title><rect x="1117.4" y="867.0" width="18.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1120.4" y="878.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDeliveryInternal (3 samples, 1.54%)</title><rect x="1117.4" y="851.0" width="18.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1120.4" y="862.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 1.54%)</title><rect x="1117.4" y="835.0" width="18.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1120.4" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 1.54%)</title><rect x="1117.4" y="819.0" width="18.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1120.4" y="830.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (3 samples, 1.54%)</title><rect x="1117.4" y="803.0" width="18.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1120.4" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (3 samples, 1.54%)</title><rect x="1117.4" y="787.0" width="18.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1120.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8_0 (3 samples, 1.54%)</title><rect x="1117.4" y="771.0" width="18.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1120.4" y="782.0"></text>
</g>
<g>
<title>byte[] (2 samples, 1.03%)</title><rect x="1117.4" y="755.0" width="12.1" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="1120.4" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.51%)</title><rect x="1129.5" y="755.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1132.5" y="766.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.51%)</title><rect x="1129.5" y="739.0" width="6.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1132.5" y="750.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.51%)</title><rect x="1135.5" y="883.0" width="6.1" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1138.5" y="894.0"></text>
</g>
<g>
<title>[rabbitmq-consumer-8 tid=21983] (4 samples, 2.05%)</title><rect x="1141.6" y="963.0" width="24.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1144.6" y="974.0">[..</text>
</g>
<g>
<title>java/lang/Thread.run (4 samples, 2.05%)</title><rect x="1141.6" y="947.0" width="24.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1144.6" y="958.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (4 samples, 2.05%)</title><rect x="1141.6" y="931.0" width="24.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1144.6" y="942.0">j..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (4 samples, 2.05%)</title><rect x="1141.6" y="915.0" width="24.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1144.6" y="926.0">j..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerWorkService$WorkPoolRunnable.run (4 samples, 2.05%)</title><rect x="1141.6" y="899.0" width="24.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1144.6" y="910.0">c..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerDispatcher$5.run (3 samples, 1.54%)</title><rect x="1141.6" y="883.0" width="18.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1144.6" y="894.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDelivery (3 samples, 1.54%)</title><rect x="1141.6" y="867.0" width="18.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1144.6" y="878.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDeliveryInternal (3 samples, 1.54%)</title><rect x="1141.6" y="851.0" width="18.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1144.6" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 0.51%)</title><rect x="1141.6" y="835.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1144.6" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 0.51%)</title><rect x="1141.6" y="819.0" width="6.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1144.6" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 0.51%)</title><rect x="1141.6" y="803.0" width="6.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1144.6" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.put (1 samples, 0.51%)</title><rect x="1141.6" y="787.0" width="6.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1144.6" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.putVal (1 samples, 0.51%)</title><rect x="1141.6" y="771.0" width="6.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1144.6" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.resize (1 samples, 0.51%)</title><rect x="1141.6" y="755.0" width="6.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1144.6" y="766.0"></text>
</g>
<g>
<title>java.util.HashMap$Node[] (1 samples, 0.51%)</title><rect x="1141.6" y="739.0" width="6.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1144.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 1.03%)</title><rect x="1147.6" y="835.0" width="12.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1150.6" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 1.03%)</title><rect x="1147.6" y="819.0" width="12.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1150.6" y="830.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (2 samples, 1.03%)</title><rect x="1147.6" y="803.0" width="12.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1150.6" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (2 samples, 1.03%)</title><rect x="1147.6" y="787.0" width="12.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1150.6" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8_0 (2 samples, 1.03%)</title><rect x="1147.6" y="771.0" width="12.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1150.6" y="782.0"></text>
</g>
<g>
<title>byte[] (2 samples, 1.03%)</title><rect x="1147.6" y="755.0" width="12.1" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="1150.6" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.51%)</title><rect x="1159.7" y="883.0" width="6.1" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="1162.7" y="894.0"></text>
</g>
<g>
<title>[rabbitmq-consumer-9 tid=21984] (3 samples, 1.54%)</title><rect x="1165.8" y="963.0" width="18.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1168.8" y="974.0"></text>
</g>
<g>
<title>java/lang/Thread.run (3 samples, 1.54%)</title><rect x="1165.8" y="947.0" width="18.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1168.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3 samples, 1.54%)</title><rect x="1165.8" y="931.0" width="18.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1168.8" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3 samples, 1.54%)</title><rect x="1165.8" y="915.0" width="18.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1168.8" y="926.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerWorkService$WorkPoolRunnable.run (3 samples, 1.54%)</title><rect x="1165.8" y="899.0" width="18.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1168.8" y="910.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerDispatcher$5.run (2 samples, 1.03%)</title><rect x="1165.8" y="883.0" width="12.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1168.8" y="894.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDelivery (2 samples, 1.03%)</title><rect x="1165.8" y="867.0" width="12.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1168.8" y="878.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDeliveryInternal (2 samples, 1.03%)</title><rect x="1165.8" y="851.0" width="12.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1168.8" y="862.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 0.51%)</title><rect x="1165.8" y="835.0" width="6.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1168.8" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 0.51%)</title><rect x="1165.8" y="819.0" width="6.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1168.8" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 0.51%)</title><rect x="1165.8" y="803.0" width="6.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1168.8" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroupFuture.&lt;init&gt; (1 samples, 0.51%)</title><rect x="1165.8" y="787.0" width="6.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1168.8" y="798.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (1 samples, 0.51%)</title><rect x="1165.8" y="771.0" width="6.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1168.8" y="782.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableCollection$1 (1 samples, 0.51%)</title><rect x="1165.8" y="755.0" width="6.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1168.8" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.51%)</title><rect x="1171.8" y="835.0" width="6.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1174.8" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.51%)</title><rect x="1171.8" y="819.0" width="6.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1174.8" y="830.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (1 samples, 0.51%)</title><rect x="1171.8" y="803.0" width="6.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1174.8" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (1 samples, 0.51%)</title><rect x="1171.8" y="787.0" width="6.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1174.8" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8_0 (1 samples, 0.51%)</title><rect x="1171.8" y="771.0" width="6.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1174.8" y="782.0"></text>
</g>
<g>
<title>byte[] (1 samples, 0.51%)</title><rect x="1171.8" y="755.0" width="6.1" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1174.8" y="766.0"></text>
</g>
<g>
<title>java.util.ArrayList (1 samples, 0.51%)</title><rect x="1177.9" y="883.0" width="6.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="1180.9" y="894.0"></text>
</g>
<g>
<title>[tid=21963] (1 samples, 0.51%)</title><rect x="1183.9" y="963.0" width="6.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1186.9" y="974.0"></text>
</g>
<g>
<title>[not_walkable] (1 samples, 0.51%)</title><rect x="1183.9" y="947.0" width="6.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1186.9" y="958.0"></text>
</g>
<g>
<title>java.lang.management.MemoryUsage[] (1 samples, 0.51%)</title><rect x="1183.9" y="931.0" width="6.1" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="1186.9" y="942.0"></text>
</g>
</g>
</svg>
