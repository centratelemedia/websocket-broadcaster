<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1014" onload="init(evt)" viewBox="0 0 1200 1014" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="997"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="997"> </text>
<g id="frames">
<g>
<title>all (59 samples, 100.00%)</title><rect x="10.0" y="963.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="974.0">all</text>
</g>
<g>
<title>[AMQP Connection 127.0.0.1:5672 tid=4743] (8 samples, 13.56%)</title><rect x="10.0" y="947.0" width="160.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="958.0">[AMQP Connection 127..</text>
</g>
<g>
<title>java/lang/Thread.run (8 samples, 13.56%)</title><rect x="10.0" y="931.0" width="160.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="942.0">java/lang/Thread.run</text>
</g>
<g>
<title>com/rabbitmq/client/impl/AMQConnection$MainLoop.run (8 samples, 13.56%)</title><rect x="10.0" y="915.0" width="160.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="926.0">com/rabbitmq/client/..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/AMQConnection.access$300 (6 samples, 10.17%)</title><rect x="10.0" y="899.0" width="120.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="13.0" y="910.0">com/rabbitmq/cl..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/AMQConnection.readFrame (6 samples, 10.17%)</title><rect x="10.0" y="883.0" width="120.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="13.0" y="894.0">com/rabbitmq/cl..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/AMQChannel.handleFrame (6 samples, 10.17%)</title><rect x="10.0" y="867.0" width="120.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.0" y="878.0">com/rabbitmq/cl..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/AMQChannel.handleCompleteInboundCommand (1 samples, 1.69%)</title><rect x="10.0" y="851.0" width="20.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/ChannelN.processAsync (1 samples, 1.69%)</title><rect x="10.0" y="835.0" width="20.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/recovery/RecoveryAwareChannelN.processDelivery (1 samples, 1.69%)</title><rect x="10.0" y="819.0" width="20.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/ChannelN.processDelivery (1 samples, 1.69%)</title><rect x="10.0" y="803.0" width="20.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>com.rabbitmq.client.Envelope (1 samples, 1.69%)</title><rect x="10.0" y="787.0" width="20.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="13.0" y="798.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/AMQCommand.handleFrame (5 samples, 8.47%)</title><rect x="30.0" y="851.0" width="100.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="33.0" y="862.0">com/rabbitmq..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/CommandAssembler.handleFrame (5 samples, 8.47%)</title><rect x="30.0" y="835.0" width="100.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="33.0" y="846.0">com/rabbitmq..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/CommandAssembler.consumeHeaderFrame (2 samples, 3.39%)</title><rect x="30.0" y="819.0" width="40.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="33.0" y="830.0">com..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/Frame.getInputStream (2 samples, 3.39%)</title><rect x="30.0" y="803.0" width="40.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="33.0" y="814.0">com..</text>
</g>
<g>
<title>java.io.ByteArrayInputStream (1 samples, 1.69%)</title><rect x="30.0" y="787.0" width="20.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="33.0" y="798.0"></text>
</g>
<g>
<title>java/io/DataInputStream.&lt;init&gt; (1 samples, 1.69%)</title><rect x="50.0" y="787.0" width="20.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="53.0" y="798.0"></text>
</g>
<g>
<title>byte[] (1 samples, 1.69%)</title><rect x="50.0" y="771.0" width="20.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="53.0" y="782.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/CommandAssembler.consumeMethodFrame (3 samples, 5.08%)</title><rect x="70.0" y="819.0" width="60.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="73.0" y="830.0">com/ra..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/AMQImpl.readMethodFrom (3 samples, 5.08%)</title><rect x="70.0" y="803.0" width="60.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="73.0" y="814.0">com/ra..</text>
</g>
<g>
<title>com.rabbitmq.client.impl.AMQImpl$Basic$Deliver (1 samples, 1.69%)</title><rect x="70.0" y="787.0" width="20.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="73.0" y="798.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/AMQImpl$Basic$Deliver.&lt;init&gt; (2 samples, 3.39%)</title><rect x="90.0" y="787.0" width="40.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="93.0" y="798.0">com..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/MethodArgumentReader.readShortstr (2 samples, 3.39%)</title><rect x="90.0" y="771.0" width="40.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="93.0" y="782.0">com..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/ValueReader.readShortstr (2 samples, 3.39%)</title><rect x="90.0" y="755.0" width="40.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="93.0" y="766.0">com..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/ValueReader.readShortstr (2 samples, 3.39%)</title><rect x="90.0" y="739.0" width="40.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="93.0" y="750.0">com..</text>
</g>
<g>
<title>java.lang.String (2 samples, 3.39%)</title><rect x="90.0" y="723.0" width="40.0" height="15" fill="#53c1c1" rx="2" ry="2"/>
<text x="93.0" y="734.0">jav..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/SocketFrameHandler.readFrame (2 samples, 3.39%)</title><rect x="130.0" y="899.0" width="40.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="133.0" y="910.0">com..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/Frame.readFrom (2 samples, 3.39%)</title><rect x="130.0" y="883.0" width="40.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="133.0" y="894.0">com..</text>
</g>
<g>
<title>byte[] (2 samples, 3.39%)</title><rect x="130.0" y="867.0" width="40.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="133.0" y="878.0">byt..</text>
</g>
<g>
<title>[Attach Listener tid=4831] (1 samples, 1.69%)</title><rect x="170.0" y="947.0" width="20.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="173.0" y="958.0"></text>
</g>
<g>
<title>[not_walkable] (1 samples, 1.69%)</title><rect x="170.0" y="931.0" width="20.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="173.0" y="942.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 1.69%)</title><rect x="170.0" y="915.0" width="20.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="173.0" y="926.0"></text>
</g>
<g>
<title>[epollEventLoopGroup-3-2 tid=4789] (27 samples, 45.76%)</title><rect x="190.0" y="947.0" width="540.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="193.0" y="958.0">[epollEventLoopGroup-3-2 tid=4789]</text>
</g>
<g>
<title>java/lang/Thread.run (27 samples, 45.76%)</title><rect x="190.0" y="931.0" width="540.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="193.0" y="942.0">java/lang/Thread.run</text>
</g>
<g>
<title>io/netty/util/concurrent/FastThreadLocalRunnable.run (27 samples, 45.76%)</title><rect x="190.0" y="915.0" width="540.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="193.0" y="926.0">io/netty/util/concurrent/FastThreadLocalRunnable.run</text>
</g>
<g>
<title>io/netty/util/internal/ThreadExecutorMap$2.run (27 samples, 45.76%)</title><rect x="190.0" y="899.0" width="540.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="193.0" y="910.0">io/netty/util/internal/ThreadExecutorMap$2.run</text>
</g>
<g>
<title>io/netty/util/concurrent/SingleThreadEventExecutor$5.run (27 samples, 45.76%)</title><rect x="190.0" y="883.0" width="540.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="193.0" y="894.0">io/netty/util/concurrent/SingleThreadEventExecutor$5.run</text>
</g>
<g>
<title>io/netty/channel/epoll/EpollEventLoop.run (27 samples, 45.76%)</title><rect x="190.0" y="867.0" width="540.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="193.0" y="878.0">io/netty/channel/epoll/EpollEventLoop.run</text>
</g>
<g>
<title>io/netty/channel/epoll/EpollEventLoop.processReady (27 samples, 45.76%)</title><rect x="190.0" y="851.0" width="540.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="193.0" y="862.0">io/netty/channel/epoll/EpollEventLoop.processReady</text>
</g>
<g>
<title>io/netty/channel/epoll/AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady (27 samples, 45.76%)</title><rect x="190.0" y="835.0" width="540.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="193.0" y="846.0">io/netty/channel/epoll/AbstractEpollStreamChannel$EpollStreamUnsafe.epollIn..</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.fireChannelRead (27 samples, 45.76%)</title><rect x="190.0" y="819.0" width="540.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="193.0" y="830.0">io/netty/channel/DefaultChannelPipeline.fireChannelRead</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (27 samples, 45.76%)</title><rect x="190.0" y="803.0" width="540.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="193.0" y="814.0">io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (27 samples, 45.76%)</title><rect x="190.0" y="787.0" width="540.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="193.0" y="798.0">io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead</text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline$HeadContext.channelRead (27 samples, 45.76%)</title><rect x="190.0" y="771.0" width="540.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="193.0" y="782.0">io/netty/channel/DefaultChannelPipeline$HeadContext.channelRead</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (27 samples, 45.76%)</title><rect x="190.0" y="755.0" width="540.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="193.0" y="766.0">io/netty/channel/AbstractChannelHandlerContext.fireChannelRead</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (27 samples, 45.76%)</title><rect x="190.0" y="739.0" width="540.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="193.0" y="750.0">io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (27 samples, 45.76%)</title><rect x="190.0" y="723.0" width="540.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="193.0" y="734.0">io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead</text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler.channelRead (27 samples, 45.76%)</title><rect x="190.0" y="707.0" width="540.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="193.0" y="718.0">io/netty/channel/CombinedChannelDuplexHandler.channelRead</text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.channelRead (27 samples, 45.76%)</title><rect x="190.0" y="691.0" width="540.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="193.0" y="702.0">io/netty/handler/codec/ByteToMessageDecoder.channelRead</text>
</g>
<g>
<title>io/netty/handler/codec/ByteToMessageDecoder.fireChannelRead (27 samples, 45.76%)</title><rect x="190.0" y="675.0" width="540.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="193.0" y="686.0">io/netty/handler/codec/ByteToMessageDecoder.fireChannelRead</text>
</g>
<g>
<title>io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead (27 samples, 45.76%)</title><rect x="190.0" y="659.0" width="540.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="193.0" y="670.0">io/netty/channel/CombinedChannelDuplexHandler$DelegatingChannelHandlerConte..</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (27 samples, 45.76%)</title><rect x="190.0" y="643.0" width="540.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="193.0" y="654.0">io/netty/channel/AbstractChannelHandlerContext.fireChannelRead</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (27 samples, 45.76%)</title><rect x="190.0" y="627.0" width="540.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="193.0" y="638.0">io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (27 samples, 45.76%)</title><rect x="190.0" y="611.0" width="540.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="193.0" y="622.0">io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead</text>
</g>
<g>
<title>io/netty/handler/codec/MessageToMessageDecoder.channelRead (27 samples, 45.76%)</title><rect x="190.0" y="595.0" width="540.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="193.0" y="606.0">io/netty/handler/codec/MessageToMessageDecoder.channelRead</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.fireChannelRead (27 samples, 45.76%)</title><rect x="190.0" y="579.0" width="540.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="193.0" y="590.0">io/netty/channel/AbstractChannelHandlerContext.fireChannelRead</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (27 samples, 45.76%)</title><rect x="190.0" y="563.0" width="540.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="193.0" y="574.0">io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead</text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead (27 samples, 45.76%)</title><rect x="190.0" y="547.0" width="540.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="193.0" y="558.0">io/netty/channel/AbstractChannelHandlerContext.invokeChannelRead</text>
</g>
<g>
<title>io/netty/channel/SimpleChannelInboundHandler.channelRead (27 samples, 45.76%)</title><rect x="190.0" y="531.0" width="540.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="193.0" y="542.0">io/netty/channel/SimpleChannelInboundHandler.channelRead</text>
</g>
<g>
<title>pbouda/broadcaster/server/netty/HttpRequestHandler.channelRead0 (27 samples, 45.76%)</title><rect x="190.0" y="515.0" width="540.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="193.0" y="526.0">pbouda/broadcaster/server/netty/HttpRequestHandler.channelRead0</text>
</g>
<g>
<title>pbouda/broadcaster/server/netty/HttpRequestHandler.channelRead0 (27 samples, 45.76%)</title><rect x="190.0" y="499.0" width="540.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="193.0" y="510.0">pbouda/broadcaster/server/netty/HttpRequestHandler.channelRead0</text>
</g>
<g>
<title>pbouda/broadcaster/server/netty/route/PrometheusRoute.process (27 samples, 45.76%)</title><rect x="190.0" y="483.0" width="540.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="193.0" y="494.0">pbouda/broadcaster/server/netty/route/PrometheusRoute.process</text>
</g>
<g>
<title>io/micrometer/prometheus/PrometheusMeterRegistry.scrape (26 samples, 44.07%)</title><rect x="190.0" y="467.0" width="520.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="193.0" y="478.0">io/micrometer/prometheus/PrometheusMeterRegistry.scrape</text>
</g>
<g>
<title>io/micrometer/prometheus/PrometheusMeterRegistry.scrape (26 samples, 44.07%)</title><rect x="190.0" y="451.0" width="520.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="193.0" y="462.0">io/micrometer/prometheus/PrometheusMeterRegistry.scrape</text>
</g>
<g>
<title>io/prometheus/client/exporter/common/TextFormat.write004 (26 samples, 44.07%)</title><rect x="190.0" y="435.0" width="520.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="193.0" y="446.0">io/prometheus/client/exporter/common/TextFormat.write004</text>
</g>
<g>
<title>io/prometheus/client/CollectorRegistry$MetricFamilySamplesEnumeration.nextElement (24 samples, 40.68%)</title><rect x="190.0" y="419.0" width="480.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="193.0" y="430.0">io/prometheus/client/CollectorRegistry$MetricFamilySamplesEnumerat..</text>
</g>
<g>
<title>io/prometheus/client/CollectorRegistry$MetricFamilySamplesEnumeration.nextElement (24 samples, 40.68%)</title><rect x="190.0" y="403.0" width="480.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="193.0" y="414.0">io/prometheus/client/CollectorRegistry$MetricFamilySamplesEnumerat..</text>
</g>
<g>
<title>io/prometheus/client/CollectorRegistry$MetricFamilySamplesEnumeration.findNextElement (24 samples, 40.68%)</title><rect x="190.0" y="387.0" width="480.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="193.0" y="398.0">io/prometheus/client/CollectorRegistry$MetricFamilySamplesEnumerat..</text>
</g>
<g>
<title>io/micrometer/prometheus/MicrometerCollector.collect (24 samples, 40.68%)</title><rect x="190.0" y="371.0" width="480.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="193.0" y="382.0">io/micrometer/prometheus/MicrometerCollector.collect</text>
</g>
<g>
<title>io/micrometer/prometheus/PrometheusMeterRegistry$$Lambda$126/1309238149.samples (24 samples, 40.68%)</title><rect x="190.0" y="355.0" width="480.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="193.0" y="366.0">io/micrometer/prometheus/PrometheusMeterRegistry$$Lambda$126/13092..</text>
</g>
<g>
<title>io/micrometer/prometheus/PrometheusMeterRegistry.lambda$newGauge$3 (24 samples, 40.68%)</title><rect x="190.0" y="339.0" width="480.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="193.0" y="350.0">io/micrometer/prometheus/PrometheusMeterRegistry.lambda$newGauge$3</text>
</g>
<g>
<title>io/micrometer/core/instrument/internal/DefaultGauge.value (24 samples, 40.68%)</title><rect x="190.0" y="323.0" width="480.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="193.0" y="334.0">io/micrometer/core/instrument/internal/DefaultGauge.value</text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/ProcessMemoryMetrics$$Lambda$158/1213818572.applyAsDouble (22 samples, 37.29%)</title><rect x="190.0" y="307.0" width="440.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="193.0" y="318.0">io/github/mweirauch/micrometer/jvm/extras/ProcessMemoryMetri..</text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/ProcessMemoryMetrics.lambda$bindTo$0 (22 samples, 37.29%)</title><rect x="190.0" y="291.0" width="440.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="193.0" y="302.0">io/github/mweirauch/micrometer/jvm/extras/ProcessMemoryMetri..</text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/ProcessMemoryMetrics.value (22 samples, 37.29%)</title><rect x="190.0" y="275.0" width="440.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="193.0" y="286.0">io/github/mweirauch/micrometer/jvm/extras/ProcessMemoryMetri..</text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsSmaps.get (22 samples, 37.29%)</title><rect x="190.0" y="259.0" width="440.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="193.0" y="270.0">io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsSmaps..</text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsEntry.get (22 samples, 37.29%)</title><rect x="190.0" y="243.0" width="440.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="193.0" y="254.0">io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsEntry..</text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsEntry.collect (22 samples, 37.29%)</title><rect x="190.0" y="227.0" width="440.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="193.0" y="238.0">io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsEntry..</text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsReader.read (22 samples, 37.29%)</title><rect x="190.0" y="211.0" width="440.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="193.0" y="222.0">io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsReade..</text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsReader.readPath (22 samples, 37.29%)</title><rect x="190.0" y="195.0" width="440.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="193.0" y="206.0">io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsReade..</text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsEntry$$Lambda$181/1026489440.accept (13 samples, 22.03%)</title><rect x="190.0" y="179.0" width="260.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="193.0" y="190.0">io/github/mweirauch/micrometer/jvm/..</text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsEntry.lambda$collect$0 (13 samples, 22.03%)</title><rect x="190.0" y="163.0" width="260.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="193.0" y="174.0">io/github/mweirauch/micrometer/jvm/..</text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsSmaps.handle (13 samples, 22.03%)</title><rect x="190.0" y="147.0" width="260.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="193.0" y="158.0">io/github/mweirauch/micrometer/jvm/..</text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsSmaps.parseKiloBytes (10 samples, 16.95%)</title><rect x="190.0" y="131.0" width="200.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="193.0" y="142.0">io/github/mweirauch/microm..</text>
</g>
<g>
<title>java/lang/Double.parseDouble (1 samples, 1.69%)</title><rect x="190.0" y="115.0" width="20.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="193.0" y="126.0"></text>
</g>
<g>
<title>jdk/internal/math/FloatingDecimal.parseDouble (1 samples, 1.69%)</title><rect x="190.0" y="99.0" width="20.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="193.0" y="110.0"></text>
</g>
<g>
<title>jdk/internal/math/FloatingDecimal.readJavaFormatString (1 samples, 1.69%)</title><rect x="190.0" y="83.0" width="20.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="193.0" y="94.0"></text>
</g>
<g>
<title>jdk.internal.math.FloatingDecimal$ASCIIToBinaryBuffer (1 samples, 1.69%)</title><rect x="190.0" y="67.0" width="20.0" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="193.0" y="78.0"></text>
</g>
<g>
<title>java/util/regex/Matcher.group (2 samples, 3.39%)</title><rect x="210.0" y="115.0" width="40.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="213.0" y="126.0">jav..</text>
</g>
<g>
<title>java/util/regex/Matcher.getSubSequence (2 samples, 3.39%)</title><rect x="210.0" y="99.0" width="40.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="213.0" y="110.0">jav..</text>
</g>
<g>
<title>java/lang/String.subSequence (2 samples, 3.39%)</title><rect x="210.0" y="83.0" width="40.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="213.0" y="94.0">jav..</text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 3.39%)</title><rect x="210.0" y="67.0" width="40.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="213.0" y="78.0">jav..</text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 3.39%)</title><rect x="210.0" y="51.0" width="40.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="213.0" y="62.0">jav..</text>
</g>
<g>
<title>java.lang.String (2 samples, 3.39%)</title><rect x="210.0" y="35.0" width="40.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="213.0" y="46.0">jav..</text>
</g>
<g>
<title>java/util/regex/Pattern.matcher (7 samples, 11.86%)</title><rect x="250.0" y="115.0" width="140.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="253.0" y="126.0">java/util/regex/Pa..</text>
</g>
<g>
<title>java/util/regex/Matcher.&lt;init&gt; (7 samples, 11.86%)</title><rect x="250.0" y="99.0" width="140.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="253.0" y="110.0">java/util/regex/Ma..</text>
</g>
<g>
<title>int[] (5 samples, 8.47%)</title><rect x="250.0" y="83.0" width="100.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="253.0" y="94.0">int[]</text>
</g>
<g>
<title>java.util.regex.IntHashSet[] (2 samples, 3.39%)</title><rect x="350.0" y="83.0" width="40.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="353.0" y="94.0">jav..</text>
</g>
<g>
<title>java/lang/Double.valueOf (1 samples, 1.69%)</title><rect x="390.0" y="131.0" width="20.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="393.0" y="142.0"></text>
</g>
<g>
<title>java.lang.Double (1 samples, 1.69%)</title><rect x="390.0" y="115.0" width="20.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="393.0" y="126.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (1 samples, 1.69%)</title><rect x="410.0" y="131.0" width="20.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="413.0" y="142.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 1.69%)</title><rect x="410.0" y="115.0" width="20.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="413.0" y="126.0"></text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsSmaps$$Lambda$182/636783067.get$Lambda (1 samples, 1.69%)</title><rect x="410.0" y="99.0" width="20.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="413.0" y="110.0"></text>
</g>
<g>
<title>io.github.mweirauch.micrometer.jvm.extras.procfs.ProcfsSmaps$$Lambda$182 (1 samples, 1.69%)</title><rect x="410.0" y="83.0" width="20.0" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="413.0" y="94.0"></text>
</g>
<g>
<title>java/util/HashMap.compute (1 samples, 1.69%)</title><rect x="430.0" y="131.0" width="20.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="433.0" y="142.0"></text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsSmaps$$Lambda$182/636783067.apply (1 samples, 1.69%)</title><rect x="430.0" y="115.0" width="20.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="433.0" y="126.0"></text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsSmaps.lambda$handle$0 (1 samples, 1.69%)</title><rect x="430.0" y="99.0" width="20.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="433.0" y="110.0"></text>
</g>
<g>
<title>java/lang/Double.valueOf (1 samples, 1.69%)</title><rect x="430.0" y="83.0" width="20.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="433.0" y="94.0"></text>
</g>
<g>
<title>java.lang.Double (1 samples, 1.69%)</title><rect x="430.0" y="67.0" width="20.0" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="433.0" y="78.0"></text>
</g>
<g>
<title>java/io/BufferedReader.readLine (8 samples, 13.56%)</title><rect x="450.0" y="179.0" width="160.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="453.0" y="190.0">java/io/BufferedRead..</text>
</g>
<g>
<title>java/io/BufferedReader.readLine (8 samples, 13.56%)</title><rect x="450.0" y="163.0" width="160.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="453.0" y="174.0">java/io/BufferedRead..</text>
</g>
<g>
<title>java.lang.String (4 samples, 6.78%)</title><rect x="450.0" y="147.0" width="80.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="453.0" y="158.0">java.lang..</text>
</g>
<g>
<title>java/io/BufferedReader.fill (1 samples, 1.69%)</title><rect x="530.0" y="147.0" width="20.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="533.0" y="158.0"></text>
</g>
<g>
<title>java/io/InputStreamReader.read (1 samples, 1.69%)</title><rect x="530.0" y="131.0" width="20.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="533.0" y="142.0"></text>
</g>
<g>
<title>sun/nio/cs/StreamDecoder.read (1 samples, 1.69%)</title><rect x="530.0" y="115.0" width="20.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="533.0" y="126.0"></text>
</g>
<g>
<title>sun/nio/cs/StreamDecoder.implRead (1 samples, 1.69%)</title><rect x="530.0" y="99.0" width="20.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="533.0" y="110.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.wrap (1 samples, 1.69%)</title><rect x="530.0" y="83.0" width="20.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="533.0" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapCharBuffer (1 samples, 1.69%)</title><rect x="530.0" y="67.0" width="20.0" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="533.0" y="78.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 5.08%)</title><rect x="550.0" y="147.0" width="60.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="553.0" y="158.0">java/l..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 5.08%)</title><rect x="550.0" y="131.0" width="60.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="553.0" y="142.0">java/l..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3 samples, 5.08%)</title><rect x="550.0" y="115.0" width="60.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="553.0" y="126.0">java/l..</text>
</g>
<g>
<title>byte[] (3 samples, 5.08%)</title><rect x="550.0" y="99.0" width="60.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="553.0" y="110.0">byte[]</text>
</g>
<g>
<title>java/nio/file/Files.newBufferedReader (1 samples, 1.69%)</title><rect x="610.0" y="179.0" width="20.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="613.0" y="190.0"></text>
</g>
<g>
<title>java/nio/file/Files.newBufferedReader (1 samples, 1.69%)</title><rect x="610.0" y="163.0" width="20.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="613.0" y="174.0"></text>
</g>
<g>
<title>java/io/BufferedReader.&lt;init&gt; (1 samples, 1.69%)</title><rect x="610.0" y="147.0" width="20.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="613.0" y="158.0"></text>
</g>
<g>
<title>java/io/BufferedReader.&lt;init&gt; (1 samples, 1.69%)</title><rect x="610.0" y="131.0" width="20.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="613.0" y="142.0"></text>
</g>
<g>
<title>char[] (1 samples, 1.69%)</title><rect x="610.0" y="115.0" width="20.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="613.0" y="126.0"></text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/ProcessThreadMetrics$$Lambda$159/1055096410.applyAsDouble (2 samples, 3.39%)</title><rect x="630.0" y="307.0" width="40.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="633.0" y="318.0">io/..</text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/ProcessThreadMetrics.lambda$bindTo$0 (2 samples, 3.39%)</title><rect x="630.0" y="291.0" width="40.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="633.0" y="302.0">io/..</text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/ProcessThreadMetrics.value (2 samples, 3.39%)</title><rect x="630.0" y="275.0" width="40.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="633.0" y="286.0">io/..</text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsStatus.get (2 samples, 3.39%)</title><rect x="630.0" y="259.0" width="40.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="633.0" y="270.0">io/..</text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsEntry.get (2 samples, 3.39%)</title><rect x="630.0" y="243.0" width="40.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="633.0" y="254.0">io/..</text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsEntry.collect (2 samples, 3.39%)</title><rect x="630.0" y="227.0" width="40.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="633.0" y="238.0">io/..</text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsReader.read (2 samples, 3.39%)</title><rect x="630.0" y="211.0" width="40.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="633.0" y="222.0">io/..</text>
</g>
<g>
<title>io/github/mweirauch/micrometer/jvm/extras/procfs/ProcfsReader.readPath (2 samples, 3.39%)</title><rect x="630.0" y="195.0" width="40.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="633.0" y="206.0">io/..</text>
</g>
<g>
<title>java/io/BufferedReader.readLine (1 samples, 1.69%)</title><rect x="630.0" y="179.0" width="20.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="633.0" y="190.0"></text>
</g>
<g>
<title>java/io/BufferedReader.readLine (1 samples, 1.69%)</title><rect x="630.0" y="163.0" width="20.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="633.0" y="174.0"></text>
</g>
<g>
<title>java/io/BufferedReader.fill (1 samples, 1.69%)</title><rect x="630.0" y="147.0" width="20.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="633.0" y="158.0"></text>
</g>
<g>
<title>java/io/InputStreamReader.read (1 samples, 1.69%)</title><rect x="630.0" y="131.0" width="20.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="633.0" y="142.0"></text>
</g>
<g>
<title>sun/nio/cs/StreamDecoder.read (1 samples, 1.69%)</title><rect x="630.0" y="115.0" width="20.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="633.0" y="126.0"></text>
</g>
<g>
<title>sun/nio/cs/StreamDecoder.implRead (1 samples, 1.69%)</title><rect x="630.0" y="99.0" width="20.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="633.0" y="110.0"></text>
</g>
<g>
<title>java/nio/CharBuffer.wrap (1 samples, 1.69%)</title><rect x="630.0" y="83.0" width="20.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="633.0" y="94.0"></text>
</g>
<g>
<title>java.nio.HeapCharBuffer (1 samples, 1.69%)</title><rect x="630.0" y="67.0" width="20.0" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="633.0" y="78.0"></text>
</g>
<g>
<title>java/nio/file/Files.newBufferedReader (1 samples, 1.69%)</title><rect x="650.0" y="179.0" width="20.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="653.0" y="190.0"></text>
</g>
<g>
<title>java/nio/file/Files.newBufferedReader (1 samples, 1.69%)</title><rect x="650.0" y="163.0" width="20.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="653.0" y="174.0"></text>
</g>
<g>
<title>java/io/BufferedReader.&lt;init&gt; (1 samples, 1.69%)</title><rect x="650.0" y="147.0" width="20.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="653.0" y="158.0"></text>
</g>
<g>
<title>java/io/BufferedReader.&lt;init&gt; (1 samples, 1.69%)</title><rect x="650.0" y="131.0" width="20.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="653.0" y="142.0"></text>
</g>
<g>
<title>char[] (1 samples, 1.69%)</title><rect x="650.0" y="115.0" width="20.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="653.0" y="126.0"></text>
</g>
<g>
<title>java/io/StringWriter.write (1 samples, 1.69%)</title><rect x="670.0" y="419.0" width="20.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="673.0" y="430.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.append (1 samples, 1.69%)</title><rect x="670.0" y="403.0" width="20.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="673.0" y="414.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 1.69%)</title><rect x="670.0" y="387.0" width="20.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="673.0" y="398.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 1.69%)</title><rect x="670.0" y="371.0" width="20.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="673.0" y="382.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 1.69%)</title><rect x="670.0" y="355.0" width="20.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="673.0" y="366.0"></text>
</g>
<g>
<title>byte[] (1 samples, 1.69%)</title><rect x="670.0" y="339.0" width="20.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="673.0" y="350.0"></text>
</g>
<g>
<title>java/util/ArrayList.iterator (1 samples, 1.69%)</title><rect x="690.0" y="419.0" width="20.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="693.0" y="430.0"></text>
</g>
<g>
<title>java.util.ArrayList$Itr (1 samples, 1.69%)</title><rect x="690.0" y="403.0" width="20.0" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="693.0" y="414.0"></text>
</g>
<g>
<title>io/netty/buffer/Unpooled.copiedBuffer (1 samples, 1.69%)</title><rect x="710.0" y="467.0" width="20.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="713.0" y="478.0"></text>
</g>
<g>
<title>io/netty/buffer/Unpooled.copiedBuffer (1 samples, 1.69%)</title><rect x="710.0" y="451.0" width="20.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="713.0" y="462.0"></text>
</g>
<g>
<title>io/netty/buffer/ByteBufUtil.encodeString0 (1 samples, 1.69%)</title><rect x="710.0" y="435.0" width="20.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="713.0" y="446.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.heapBuffer (1 samples, 1.69%)</title><rect x="710.0" y="419.0" width="20.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="713.0" y="430.0"></text>
</g>
<g>
<title>io/netty/buffer/AbstractByteBufAllocator.heapBuffer (1 samples, 1.69%)</title><rect x="710.0" y="403.0" width="20.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="713.0" y="414.0"></text>
</g>
<g>
<title>io/netty/buffer/UnpooledByteBufAllocator.newHeapBuffer (1 samples, 1.69%)</title><rect x="710.0" y="387.0" width="20.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="713.0" y="398.0"></text>
</g>
<g>
<title>io/netty/buffer/UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf.&lt;init&gt; (1 samples, 1.69%)</title><rect x="710.0" y="371.0" width="20.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="713.0" y="382.0"></text>
</g>
<g>
<title>io/netty/buffer/UnpooledUnsafeHeapByteBuf.&lt;init&gt; (1 samples, 1.69%)</title><rect x="710.0" y="355.0" width="20.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="713.0" y="366.0"></text>
</g>
<g>
<title>io/netty/buffer/UnpooledHeapByteBuf.&lt;init&gt; (1 samples, 1.69%)</title><rect x="710.0" y="339.0" width="20.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="713.0" y="350.0"></text>
</g>
<g>
<title>io/netty/buffer/UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf.allocateArray (1 samples, 1.69%)</title><rect x="710.0" y="323.0" width="20.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="713.0" y="334.0"></text>
</g>
<g>
<title>io/netty/buffer/UnpooledUnsafeHeapByteBuf.allocateArray (1 samples, 1.69%)</title><rect x="710.0" y="307.0" width="20.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="713.0" y="318.0"></text>
</g>
<g>
<title>io/netty/util/internal/PlatformDependent.allocateUninitializedArray (1 samples, 1.69%)</title><rect x="710.0" y="291.0" width="20.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="713.0" y="302.0"></text>
</g>
<g>
<title>byte[] (1 samples, 1.69%)</title><rect x="710.0" y="275.0" width="20.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="713.0" y="286.0"></text>
</g>
<g>
<title>[rabbitmq-consumer-10 tid=4753] (1 samples, 1.69%)</title><rect x="730.0" y="947.0" width="20.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="733.0" y="958.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 1.69%)</title><rect x="730.0" y="931.0" width="20.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="733.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 1.69%)</title><rect x="730.0" y="915.0" width="20.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="733.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 1.69%)</title><rect x="730.0" y="899.0" width="20.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="733.0" y="910.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerWorkService$WorkPoolRunnable.run (1 samples, 1.69%)</title><rect x="730.0" y="883.0" width="20.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="733.0" y="894.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerDispatcher$5.run (1 samples, 1.69%)</title><rect x="730.0" y="867.0" width="20.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="733.0" y="878.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDelivery (1 samples, 1.69%)</title><rect x="730.0" y="851.0" width="20.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="733.0" y="862.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDeliveryInternal (1 samples, 1.69%)</title><rect x="730.0" y="835.0" width="20.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="733.0" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 1.69%)</title><rect x="730.0" y="819.0" width="20.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="733.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 1.69%)</title><rect x="730.0" y="803.0" width="20.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="733.0" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (1 samples, 1.69%)</title><rect x="730.0" y="787.0" width="20.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="733.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (1 samples, 1.69%)</title><rect x="730.0" y="771.0" width="20.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="733.0" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8_0 (1 samples, 1.69%)</title><rect x="730.0" y="755.0" width="20.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="733.0" y="766.0"></text>
</g>
<g>
<title>byte[] (1 samples, 1.69%)</title><rect x="730.0" y="739.0" width="20.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="733.0" y="750.0"></text>
</g>
<g>
<title>[rabbitmq-consumer-11 tid=4754] (2 samples, 3.39%)</title><rect x="750.0" y="947.0" width="40.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="753.0" y="958.0">[ra..</text>
</g>
<g>
<title>java/lang/Thread.run (2 samples, 3.39%)</title><rect x="750.0" y="931.0" width="40.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="753.0" y="942.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2 samples, 3.39%)</title><rect x="750.0" y="915.0" width="40.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="753.0" y="926.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2 samples, 3.39%)</title><rect x="750.0" y="899.0" width="40.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="753.0" y="910.0">jav..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerWorkService$WorkPoolRunnable.run (2 samples, 3.39%)</title><rect x="750.0" y="883.0" width="40.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="753.0" y="894.0">com..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerDispatcher$5.run (2 samples, 3.39%)</title><rect x="750.0" y="867.0" width="40.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="753.0" y="878.0">com..</text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDelivery (2 samples, 3.39%)</title><rect x="750.0" y="851.0" width="40.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="753.0" y="862.0">pbo..</text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDeliveryInternal (2 samples, 3.39%)</title><rect x="750.0" y="835.0" width="40.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="753.0" y="846.0">pbo..</text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 1.69%)</title><rect x="750.0" y="819.0" width="20.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="753.0" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 1.69%)</title><rect x="750.0" y="803.0" width="20.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="753.0" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 1.69%)</title><rect x="750.0" y="787.0" width="20.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="753.0" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel.write (1 samples, 1.69%)</title><rect x="750.0" y="771.0" width="20.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="753.0" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.write (1 samples, 1.69%)</title><rect x="750.0" y="755.0" width="20.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="753.0" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (1 samples, 1.69%)</title><rect x="750.0" y="739.0" width="20.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="753.0" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.newPromise (1 samples, 1.69%)</title><rect x="750.0" y="723.0" width="20.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="753.0" y="734.0"></text>
</g>
<g>
<title>io.netty.channel.DefaultChannelPromise (1 samples, 1.69%)</title><rect x="750.0" y="707.0" width="20.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="753.0" y="718.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 1.69%)</title><rect x="770.0" y="819.0" width="20.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="773.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 1.69%)</title><rect x="770.0" y="803.0" width="20.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="773.0" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (1 samples, 1.69%)</title><rect x="770.0" y="787.0" width="20.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="773.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (1 samples, 1.69%)</title><rect x="770.0" y="771.0" width="20.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="773.0" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8_0 (1 samples, 1.69%)</title><rect x="770.0" y="755.0" width="20.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="773.0" y="766.0"></text>
</g>
<g>
<title>byte[] (1 samples, 1.69%)</title><rect x="770.0" y="739.0" width="20.0" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="773.0" y="750.0"></text>
</g>
<g>
<title>[rabbitmq-consumer-12 tid=4755] (1 samples, 1.69%)</title><rect x="790.0" y="947.0" width="20.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="793.0" y="958.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 1.69%)</title><rect x="790.0" y="931.0" width="20.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="793.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 1.69%)</title><rect x="790.0" y="915.0" width="20.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="793.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 1.69%)</title><rect x="790.0" y="899.0" width="20.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="793.0" y="910.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerWorkService$WorkPoolRunnable.run (1 samples, 1.69%)</title><rect x="790.0" y="883.0" width="20.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="793.0" y="894.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerDispatcher$5.run (1 samples, 1.69%)</title><rect x="790.0" y="867.0" width="20.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="793.0" y="878.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDelivery (1 samples, 1.69%)</title><rect x="790.0" y="851.0" width="20.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="793.0" y="862.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDeliveryInternal (1 samples, 1.69%)</title><rect x="790.0" y="835.0" width="20.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="793.0" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 1.69%)</title><rect x="790.0" y="819.0" width="20.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="793.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 1.69%)</title><rect x="790.0" y="803.0" width="20.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="793.0" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (1 samples, 1.69%)</title><rect x="790.0" y="787.0" width="20.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="793.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (1 samples, 1.69%)</title><rect x="790.0" y="771.0" width="20.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="793.0" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8_0 (1 samples, 1.69%)</title><rect x="790.0" y="755.0" width="20.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="793.0" y="766.0"></text>
</g>
<g>
<title>byte[] (1 samples, 1.69%)</title><rect x="790.0" y="739.0" width="20.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="793.0" y="750.0"></text>
</g>
<g>
<title>[rabbitmq-consumer-13 tid=4756] (1 samples, 1.69%)</title><rect x="810.0" y="947.0" width="20.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="813.0" y="958.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 1.69%)</title><rect x="810.0" y="931.0" width="20.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="813.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 1.69%)</title><rect x="810.0" y="915.0" width="20.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="813.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 1.69%)</title><rect x="810.0" y="899.0" width="20.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="813.0" y="910.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerWorkService$WorkPoolRunnable.run (1 samples, 1.69%)</title><rect x="810.0" y="883.0" width="20.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="813.0" y="894.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerDispatcher$5.run (1 samples, 1.69%)</title><rect x="810.0" y="867.0" width="20.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="813.0" y="878.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDelivery (1 samples, 1.69%)</title><rect x="810.0" y="851.0" width="20.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="813.0" y="862.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDeliveryInternal (1 samples, 1.69%)</title><rect x="810.0" y="835.0" width="20.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="813.0" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 1.69%)</title><rect x="810.0" y="819.0" width="20.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="813.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 1.69%)</title><rect x="810.0" y="803.0" width="20.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="813.0" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (1 samples, 1.69%)</title><rect x="810.0" y="787.0" width="20.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="813.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (1 samples, 1.69%)</title><rect x="810.0" y="771.0" width="20.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="813.0" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8_0 (1 samples, 1.69%)</title><rect x="810.0" y="755.0" width="20.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="813.0" y="766.0"></text>
</g>
<g>
<title>byte[] (1 samples, 1.69%)</title><rect x="810.0" y="739.0" width="20.0" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="813.0" y="750.0"></text>
</g>
<g>
<title>[rabbitmq-consumer-14 tid=4757] (1 samples, 1.69%)</title><rect x="830.0" y="947.0" width="20.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="833.0" y="958.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 1.69%)</title><rect x="830.0" y="931.0" width="20.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="833.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 1.69%)</title><rect x="830.0" y="915.0" width="20.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="833.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 1.69%)</title><rect x="830.0" y="899.0" width="20.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="833.0" y="910.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerWorkService$WorkPoolRunnable.run (1 samples, 1.69%)</title><rect x="830.0" y="883.0" width="20.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="833.0" y="894.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerDispatcher$5.run (1 samples, 1.69%)</title><rect x="830.0" y="867.0" width="20.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="833.0" y="878.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDelivery (1 samples, 1.69%)</title><rect x="830.0" y="851.0" width="20.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="833.0" y="862.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDeliveryInternal (1 samples, 1.69%)</title><rect x="830.0" y="835.0" width="20.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="833.0" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 1.69%)</title><rect x="830.0" y="819.0" width="20.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="833.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 1.69%)</title><rect x="830.0" y="803.0" width="20.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="833.0" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (1 samples, 1.69%)</title><rect x="830.0" y="787.0" width="20.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="833.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (1 samples, 1.69%)</title><rect x="830.0" y="771.0" width="20.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="833.0" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8_0 (1 samples, 1.69%)</title><rect x="830.0" y="755.0" width="20.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="833.0" y="766.0"></text>
</g>
<g>
<title>byte[] (1 samples, 1.69%)</title><rect x="830.0" y="739.0" width="20.0" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="833.0" y="750.0"></text>
</g>
<g>
<title>[rabbitmq-consumer-15 tid=4758] (1 samples, 1.69%)</title><rect x="850.0" y="947.0" width="20.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="853.0" y="958.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 1.69%)</title><rect x="850.0" y="931.0" width="20.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="853.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 1.69%)</title><rect x="850.0" y="915.0" width="20.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="853.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 1.69%)</title><rect x="850.0" y="899.0" width="20.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="853.0" y="910.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerWorkService$WorkPoolRunnable.run (1 samples, 1.69%)</title><rect x="850.0" y="883.0" width="20.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="853.0" y="894.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerDispatcher$5.run (1 samples, 1.69%)</title><rect x="850.0" y="867.0" width="20.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="853.0" y="878.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDelivery (1 samples, 1.69%)</title><rect x="850.0" y="851.0" width="20.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="853.0" y="862.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDeliveryInternal (1 samples, 1.69%)</title><rect x="850.0" y="835.0" width="20.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="853.0" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 1.69%)</title><rect x="850.0" y="819.0" width="20.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="853.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 1.69%)</title><rect x="850.0" y="803.0" width="20.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="853.0" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (1 samples, 1.69%)</title><rect x="850.0" y="787.0" width="20.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="853.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (1 samples, 1.69%)</title><rect x="850.0" y="771.0" width="20.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="853.0" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8_0 (1 samples, 1.69%)</title><rect x="850.0" y="755.0" width="20.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="853.0" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 1.69%)</title><rect x="850.0" y="739.0" width="20.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="853.0" y="750.0"></text>
</g>
<g>
<title>byte[] (1 samples, 1.69%)</title><rect x="850.0" y="723.0" width="20.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="853.0" y="734.0"></text>
</g>
<g>
<title>[rabbitmq-consumer-16 tid=4759] (2 samples, 3.39%)</title><rect x="870.0" y="947.0" width="40.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="873.0" y="958.0">[ra..</text>
</g>
<g>
<title>java/lang/Thread.run (2 samples, 3.39%)</title><rect x="870.0" y="931.0" width="40.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="873.0" y="942.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2 samples, 3.39%)</title><rect x="870.0" y="915.0" width="40.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="873.0" y="926.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2 samples, 3.39%)</title><rect x="870.0" y="899.0" width="40.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="873.0" y="910.0">jav..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerWorkService$WorkPoolRunnable.run (2 samples, 3.39%)</title><rect x="870.0" y="883.0" width="40.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="873.0" y="894.0">com..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerDispatcher$5.run (2 samples, 3.39%)</title><rect x="870.0" y="867.0" width="40.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="873.0" y="878.0">com..</text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDelivery (2 samples, 3.39%)</title><rect x="870.0" y="851.0" width="40.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="873.0" y="862.0">pbo..</text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDeliveryInternal (2 samples, 3.39%)</title><rect x="870.0" y="835.0" width="40.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="873.0" y="846.0">pbo..</text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 1.69%)</title><rect x="870.0" y="819.0" width="20.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="873.0" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 1.69%)</title><rect x="870.0" y="803.0" width="20.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="873.0" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 1.69%)</title><rect x="870.0" y="787.0" width="20.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="873.0" y="798.0"></text>
</g>
<g>
<title>io.netty.channel.group.DefaultChannelGroupFuture (1 samples, 1.69%)</title><rect x="870.0" y="771.0" width="20.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="873.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 1.69%)</title><rect x="890.0" y="819.0" width="20.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="893.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 1.69%)</title><rect x="890.0" y="803.0" width="20.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="893.0" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (1 samples, 1.69%)</title><rect x="890.0" y="787.0" width="20.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="893.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (1 samples, 1.69%)</title><rect x="890.0" y="771.0" width="20.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="893.0" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8_0 (1 samples, 1.69%)</title><rect x="890.0" y="755.0" width="20.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="893.0" y="766.0"></text>
</g>
<g>
<title>byte[] (1 samples, 1.69%)</title><rect x="890.0" y="739.0" width="20.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="893.0" y="750.0"></text>
</g>
<g>
<title>[rabbitmq-consumer-17 tid=4760] (1 samples, 1.69%)</title><rect x="910.0" y="947.0" width="20.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="913.0" y="958.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 1.69%)</title><rect x="910.0" y="931.0" width="20.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="913.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 1.69%)</title><rect x="910.0" y="915.0" width="20.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="913.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 1.69%)</title><rect x="910.0" y="899.0" width="20.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="913.0" y="910.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerWorkService$WorkPoolRunnable.run (1 samples, 1.69%)</title><rect x="910.0" y="883.0" width="20.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="913.0" y="894.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerDispatcher$5.run (1 samples, 1.69%)</title><rect x="910.0" y="867.0" width="20.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="913.0" y="878.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDelivery (1 samples, 1.69%)</title><rect x="910.0" y="851.0" width="20.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="913.0" y="862.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDeliveryInternal (1 samples, 1.69%)</title><rect x="910.0" y="835.0" width="20.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="913.0" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 1.69%)</title><rect x="910.0" y="819.0" width="20.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="913.0" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 1.69%)</title><rect x="910.0" y="803.0" width="20.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="913.0" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 1.69%)</title><rect x="910.0" y="787.0" width="20.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="913.0" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.safeDuplicate (1 samples, 1.69%)</title><rect x="910.0" y="771.0" width="20.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="913.0" y="782.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/websocketx/TextWebSocketFrame.retainedDuplicate (1 samples, 1.69%)</title><rect x="910.0" y="755.0" width="20.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="913.0" y="766.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/websocketx/TextWebSocketFrame.retainedDuplicate (1 samples, 1.69%)</title><rect x="910.0" y="739.0" width="20.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="913.0" y="750.0"></text>
</g>
<g>
<title>io/netty/handler/codec/http/websocketx/WebSocketFrame.retainedDuplicate (1 samples, 1.69%)</title><rect x="910.0" y="723.0" width="20.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="913.0" y="734.0"></text>
</g>
<g>
<title>io/netty/buffer/DefaultByteBufHolder.retainedDuplicate (1 samples, 1.69%)</title><rect x="910.0" y="707.0" width="20.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="913.0" y="718.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledByteBuf.retainedDuplicate (1 samples, 1.69%)</title><rect x="910.0" y="691.0" width="20.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="913.0" y="702.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledDuplicatedByteBuf.newInstance (1 samples, 1.69%)</title><rect x="910.0" y="675.0" width="20.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="913.0" y="686.0"></text>
</g>
<g>
<title>io/netty/util/Recycler.get (1 samples, 1.69%)</title><rect x="910.0" y="659.0" width="20.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="913.0" y="670.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledDuplicatedByteBuf$1.newObject (1 samples, 1.69%)</title><rect x="910.0" y="643.0" width="20.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="913.0" y="654.0"></text>
</g>
<g>
<title>io/netty/buffer/PooledDuplicatedByteBuf$1.newObject (1 samples, 1.69%)</title><rect x="910.0" y="627.0" width="20.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="913.0" y="638.0"></text>
</g>
<g>
<title>io.netty.buffer.PooledDuplicatedByteBuf (1 samples, 1.69%)</title><rect x="910.0" y="611.0" width="20.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="913.0" y="622.0"></text>
</g>
<g>
<title>[rabbitmq-consumer-2 tid=4745] (1 samples, 1.69%)</title><rect x="930.0" y="947.0" width="20.0" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="933.0" y="958.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 1.69%)</title><rect x="930.0" y="931.0" width="20.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="933.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 1.69%)</title><rect x="930.0" y="915.0" width="20.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="933.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 1.69%)</title><rect x="930.0" y="899.0" width="20.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="933.0" y="910.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerWorkService$WorkPoolRunnable.run (1 samples, 1.69%)</title><rect x="930.0" y="883.0" width="20.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="933.0" y="894.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerDispatcher$5.run (1 samples, 1.69%)</title><rect x="930.0" y="867.0" width="20.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="933.0" y="878.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDelivery (1 samples, 1.69%)</title><rect x="930.0" y="851.0" width="20.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="933.0" y="862.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDeliveryInternal (1 samples, 1.69%)</title><rect x="930.0" y="835.0" width="20.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="933.0" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 1.69%)</title><rect x="930.0" y="819.0" width="20.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="933.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 1.69%)</title><rect x="930.0" y="803.0" width="20.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="933.0" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (1 samples, 1.69%)</title><rect x="930.0" y="787.0" width="20.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="933.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (1 samples, 1.69%)</title><rect x="930.0" y="771.0" width="20.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="933.0" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8_0 (1 samples, 1.69%)</title><rect x="930.0" y="755.0" width="20.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="933.0" y="766.0"></text>
</g>
<g>
<title>byte[] (1 samples, 1.69%)</title><rect x="930.0" y="739.0" width="20.0" height="15" fill="#65d3d3" rx="2" ry="2"/>
<text x="933.0" y="750.0"></text>
</g>
<g>
<title>[rabbitmq-consumer-3 tid=4746] (1 samples, 1.69%)</title><rect x="950.0" y="947.0" width="20.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="953.0" y="958.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 1.69%)</title><rect x="950.0" y="931.0" width="20.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="953.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 1.69%)</title><rect x="950.0" y="915.0" width="20.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="953.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 1.69%)</title><rect x="950.0" y="899.0" width="20.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="953.0" y="910.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerWorkService$WorkPoolRunnable.run (1 samples, 1.69%)</title><rect x="950.0" y="883.0" width="20.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="953.0" y="894.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerDispatcher$5.run (1 samples, 1.69%)</title><rect x="950.0" y="867.0" width="20.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="953.0" y="878.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDelivery (1 samples, 1.69%)</title><rect x="950.0" y="851.0" width="20.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="953.0" y="862.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDeliveryInternal (1 samples, 1.69%)</title><rect x="950.0" y="835.0" width="20.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="953.0" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 1.69%)</title><rect x="950.0" y="819.0" width="20.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="953.0" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 1.69%)</title><rect x="950.0" y="803.0" width="20.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="953.0" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 1.69%)</title><rect x="950.0" y="787.0" width="20.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="953.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ConcurrentHashMap$ValuesView.iterator (1 samples, 1.69%)</title><rect x="950.0" y="771.0" width="20.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="953.0" y="782.0"></text>
</g>
<g>
<title>java.util.concurrent.ConcurrentHashMap$ValueIterator (1 samples, 1.69%)</title><rect x="950.0" y="755.0" width="20.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="953.0" y="766.0"></text>
</g>
<g>
<title>[rabbitmq-consumer-4 tid=4747] (3 samples, 5.08%)</title><rect x="970.0" y="947.0" width="60.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="973.0" y="958.0">[rabbi..</text>
</g>
<g>
<title>java/lang/Thread.run (3 samples, 5.08%)</title><rect x="970.0" y="931.0" width="60.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="973.0" y="942.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3 samples, 5.08%)</title><rect x="970.0" y="915.0" width="60.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="973.0" y="926.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3 samples, 5.08%)</title><rect x="970.0" y="899.0" width="60.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="973.0" y="910.0">java/u..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerWorkService$WorkPoolRunnable.run (3 samples, 5.08%)</title><rect x="970.0" y="883.0" width="60.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="973.0" y="894.0">com/ra..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerDispatcher$5.run (3 samples, 5.08%)</title><rect x="970.0" y="867.0" width="60.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="973.0" y="878.0">com/ra..</text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDelivery (3 samples, 5.08%)</title><rect x="970.0" y="851.0" width="60.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="973.0" y="862.0">pbouda..</text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDeliveryInternal (3 samples, 5.08%)</title><rect x="970.0" y="835.0" width="60.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="973.0" y="846.0">pbouda..</text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 1.69%)</title><rect x="970.0" y="819.0" width="20.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="973.0" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 1.69%)</title><rect x="970.0" y="803.0" width="20.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="973.0" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 1.69%)</title><rect x="970.0" y="787.0" width="20.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="973.0" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroupFuture.&lt;init&gt; (1 samples, 1.69%)</title><rect x="970.0" y="771.0" width="20.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="973.0" y="782.0"></text>
</g>
<g>
<title>java/util/Collections.unmodifiableMap (1 samples, 1.69%)</title><rect x="970.0" y="755.0" width="20.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="973.0" y="766.0"></text>
</g>
<g>
<title>java.util.Collections$UnmodifiableMap (1 samples, 1.69%)</title><rect x="970.0" y="739.0" width="20.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="973.0" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 3.39%)</title><rect x="990.0" y="819.0" width="40.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="993.0" y="830.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 3.39%)</title><rect x="990.0" y="803.0" width="40.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="993.0" y="814.0">jav..</text>
</g>
<g>
<title>java/lang/StringCoding.decode (2 samples, 3.39%)</title><rect x="990.0" y="787.0" width="40.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="993.0" y="798.0">jav..</text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (2 samples, 3.39%)</title><rect x="990.0" y="771.0" width="40.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="993.0" y="782.0">jav..</text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8_0 (2 samples, 3.39%)</title><rect x="990.0" y="755.0" width="40.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="993.0" y="766.0">jav..</text>
</g>
<g>
<title>byte[] (1 samples, 1.69%)</title><rect x="990.0" y="739.0" width="20.0" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="993.0" y="750.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 1.69%)</title><rect x="1010.0" y="739.0" width="20.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1013.0" y="750.0"></text>
</g>
<g>
<title>byte[] (1 samples, 1.69%)</title><rect x="1010.0" y="723.0" width="20.0" height="15" fill="#57c5c5" rx="2" ry="2"/>
<text x="1013.0" y="734.0"></text>
</g>
<g>
<title>[rabbitmq-consumer-5 tid=4748] (1 samples, 1.69%)</title><rect x="1030.0" y="947.0" width="20.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1033.0" y="958.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 1.69%)</title><rect x="1030.0" y="931.0" width="20.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1033.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 1.69%)</title><rect x="1030.0" y="915.0" width="20.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1033.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 1.69%)</title><rect x="1030.0" y="899.0" width="20.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1033.0" y="910.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerWorkService$WorkPoolRunnable.run (1 samples, 1.69%)</title><rect x="1030.0" y="883.0" width="20.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1033.0" y="894.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerDispatcher$5.run (1 samples, 1.69%)</title><rect x="1030.0" y="867.0" width="20.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1033.0" y="878.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDelivery (1 samples, 1.69%)</title><rect x="1030.0" y="851.0" width="20.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1033.0" y="862.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDeliveryInternal (1 samples, 1.69%)</title><rect x="1030.0" y="835.0" width="20.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1033.0" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 1.69%)</title><rect x="1030.0" y="819.0" width="20.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1033.0" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 1.69%)</title><rect x="1030.0" y="803.0" width="20.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1033.0" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 1.69%)</title><rect x="1030.0" y="787.0" width="20.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1033.0" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroupFuture.&lt;init&gt; (1 samples, 1.69%)</title><rect x="1030.0" y="771.0" width="20.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1033.0" y="782.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection.iterator (1 samples, 1.69%)</title><rect x="1030.0" y="755.0" width="20.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1033.0" y="766.0"></text>
</g>
<g>
<title>java/util/Collections$UnmodifiableCollection$1.&lt;init&gt; (1 samples, 1.69%)</title><rect x="1030.0" y="739.0" width="20.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1033.0" y="750.0"></text>
</g>
<g>
<title>java/util/LinkedHashMap$LinkedValues.iterator (1 samples, 1.69%)</title><rect x="1030.0" y="723.0" width="20.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1033.0" y="734.0"></text>
</g>
<g>
<title>java.util.LinkedHashMap$LinkedValueIterator (1 samples, 1.69%)</title><rect x="1030.0" y="707.0" width="20.0" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="1033.0" y="718.0"></text>
</g>
<g>
<title>[rabbitmq-consumer-6 tid=4749] (1 samples, 1.69%)</title><rect x="1050.0" y="947.0" width="20.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1053.0" y="958.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 1.69%)</title><rect x="1050.0" y="931.0" width="20.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1053.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 1.69%)</title><rect x="1050.0" y="915.0" width="20.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1053.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 1.69%)</title><rect x="1050.0" y="899.0" width="20.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1053.0" y="910.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerWorkService$WorkPoolRunnable.run (1 samples, 1.69%)</title><rect x="1050.0" y="883.0" width="20.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1053.0" y="894.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerDispatcher$5.run (1 samples, 1.69%)</title><rect x="1050.0" y="867.0" width="20.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1053.0" y="878.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDelivery (1 samples, 1.69%)</title><rect x="1050.0" y="851.0" width="20.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1053.0" y="862.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDeliveryInternal (1 samples, 1.69%)</title><rect x="1050.0" y="835.0" width="20.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1053.0" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 1.69%)</title><rect x="1050.0" y="819.0" width="20.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1053.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 1.69%)</title><rect x="1050.0" y="803.0" width="20.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1053.0" y="814.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decode (1 samples, 1.69%)</title><rect x="1050.0" y="787.0" width="20.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1053.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (1 samples, 1.69%)</title><rect x="1050.0" y="771.0" width="20.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1053.0" y="782.0"></text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8_0 (1 samples, 1.69%)</title><rect x="1050.0" y="755.0" width="20.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1053.0" y="766.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 1.69%)</title><rect x="1050.0" y="739.0" width="20.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1053.0" y="750.0"></text>
</g>
<g>
<title>byte[] (1 samples, 1.69%)</title><rect x="1050.0" y="723.0" width="20.0" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1053.0" y="734.0"></text>
</g>
<g>
<title>[rabbitmq-consumer-7 tid=4750] (2 samples, 3.39%)</title><rect x="1070.0" y="947.0" width="40.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1073.0" y="958.0">[ra..</text>
</g>
<g>
<title>java/lang/Thread.run (2 samples, 3.39%)</title><rect x="1070.0" y="931.0" width="40.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1073.0" y="942.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (2 samples, 3.39%)</title><rect x="1070.0" y="915.0" width="40.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1073.0" y="926.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (2 samples, 3.39%)</title><rect x="1070.0" y="899.0" width="40.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1073.0" y="910.0">jav..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerWorkService$WorkPoolRunnable.run (2 samples, 3.39%)</title><rect x="1070.0" y="883.0" width="40.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1073.0" y="894.0">com..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerDispatcher$5.run (2 samples, 3.39%)</title><rect x="1070.0" y="867.0" width="40.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1073.0" y="878.0">com..</text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDelivery (2 samples, 3.39%)</title><rect x="1070.0" y="851.0" width="40.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1073.0" y="862.0">pbo..</text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDeliveryInternal (2 samples, 3.39%)</title><rect x="1070.0" y="835.0" width="40.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1073.0" y="846.0">pbo..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 3.39%)</title><rect x="1070.0" y="819.0" width="40.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1073.0" y="830.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 3.39%)</title><rect x="1070.0" y="803.0" width="40.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1073.0" y="814.0">jav..</text>
</g>
<g>
<title>java/lang/StringCoding.decode (2 samples, 3.39%)</title><rect x="1070.0" y="787.0" width="40.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1073.0" y="798.0">jav..</text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (2 samples, 3.39%)</title><rect x="1070.0" y="771.0" width="40.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1073.0" y="782.0">jav..</text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8_0 (2 samples, 3.39%)</title><rect x="1070.0" y="755.0" width="40.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1073.0" y="766.0">jav..</text>
</g>
<g>
<title>byte[] (1 samples, 1.69%)</title><rect x="1070.0" y="739.0" width="20.0" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1073.0" y="750.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 1.69%)</title><rect x="1090.0" y="739.0" width="20.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1093.0" y="750.0"></text>
</g>
<g>
<title>byte[] (1 samples, 1.69%)</title><rect x="1090.0" y="723.0" width="20.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1093.0" y="734.0"></text>
</g>
<g>
<title>[rabbitmq-consumer-8 tid=4751] (1 samples, 1.69%)</title><rect x="1110.0" y="947.0" width="20.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1113.0" y="958.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1 samples, 1.69%)</title><rect x="1110.0" y="931.0" width="20.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1113.0" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1 samples, 1.69%)</title><rect x="1110.0" y="915.0" width="20.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1113.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1 samples, 1.69%)</title><rect x="1110.0" y="899.0" width="20.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1113.0" y="910.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerWorkService$WorkPoolRunnable.run (1 samples, 1.69%)</title><rect x="1110.0" y="883.0" width="20.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1113.0" y="894.0"></text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerDispatcher$5.run (1 samples, 1.69%)</title><rect x="1110.0" y="867.0" width="20.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1113.0" y="878.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDelivery (1 samples, 1.69%)</title><rect x="1110.0" y="851.0" width="20.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1113.0" y="862.0"></text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDeliveryInternal (1 samples, 1.69%)</title><rect x="1110.0" y="835.0" width="20.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1113.0" y="846.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 1.69%)</title><rect x="1110.0" y="819.0" width="20.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1113.0" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 1.69%)</title><rect x="1110.0" y="803.0" width="20.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1113.0" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 1.69%)</title><rect x="1110.0" y="787.0" width="20.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1113.0" y="798.0"></text>
</g>
<g>
<title>io.netty.channel.group.DefaultChannelGroupFuture (1 samples, 1.69%)</title><rect x="1110.0" y="771.0" width="20.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1113.0" y="782.0"></text>
</g>
<g>
<title>[rabbitmq-consumer-9 tid=4752] (3 samples, 5.08%)</title><rect x="1130.0" y="947.0" width="60.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1133.0" y="958.0">[rabbi..</text>
</g>
<g>
<title>java/lang/Thread.run (3 samples, 5.08%)</title><rect x="1130.0" y="931.0" width="60.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1133.0" y="942.0">java/l..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (3 samples, 5.08%)</title><rect x="1130.0" y="915.0" width="60.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1133.0" y="926.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (3 samples, 5.08%)</title><rect x="1130.0" y="899.0" width="60.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1133.0" y="910.0">java/u..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerWorkService$WorkPoolRunnable.run (3 samples, 5.08%)</title><rect x="1130.0" y="883.0" width="60.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1133.0" y="894.0">com/ra..</text>
</g>
<g>
<title>com/rabbitmq/client/impl/ConsumerDispatcher$5.run (3 samples, 5.08%)</title><rect x="1130.0" y="867.0" width="60.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1133.0" y="878.0">com/ra..</text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDelivery (3 samples, 5.08%)</title><rect x="1130.0" y="851.0" width="60.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1133.0" y="862.0">pbouda..</text>
</g>
<g>
<title>pbouda/broadcaster/server/rabbit/EventConsumer.handleDeliveryInternal (3 samples, 5.08%)</title><rect x="1130.0" y="835.0" width="60.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1133.0" y="846.0">pbouda..</text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 1.69%)</title><rect x="1130.0" y="819.0" width="20.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1133.0" y="830.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 1.69%)</title><rect x="1130.0" y="803.0" width="20.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1133.0" y="814.0"></text>
</g>
<g>
<title>io/netty/channel/group/DefaultChannelGroup.write (1 samples, 1.69%)</title><rect x="1130.0" y="787.0" width="20.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1133.0" y="798.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannel.write (1 samples, 1.69%)</title><rect x="1130.0" y="771.0" width="20.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1133.0" y="782.0"></text>
</g>
<g>
<title>io/netty/channel/DefaultChannelPipeline.write (1 samples, 1.69%)</title><rect x="1130.0" y="755.0" width="20.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1133.0" y="766.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (1 samples, 1.69%)</title><rect x="1130.0" y="739.0" width="20.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1133.0" y="750.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (1 samples, 1.69%)</title><rect x="1130.0" y="723.0" width="20.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1133.0" y="734.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext.write (1 samples, 1.69%)</title><rect x="1130.0" y="707.0" width="20.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1133.0" y="718.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$WriteTask.newInstance (1 samples, 1.69%)</title><rect x="1130.0" y="691.0" width="20.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1133.0" y="702.0"></text>
</g>
<g>
<title>io/netty/util/Recycler.get (1 samples, 1.69%)</title><rect x="1130.0" y="675.0" width="20.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1133.0" y="686.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$WriteTask$1.newObject (1 samples, 1.69%)</title><rect x="1130.0" y="659.0" width="20.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1133.0" y="670.0"></text>
</g>
<g>
<title>io/netty/channel/AbstractChannelHandlerContext$WriteTask$1.newObject (1 samples, 1.69%)</title><rect x="1130.0" y="643.0" width="20.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1133.0" y="654.0"></text>
</g>
<g>
<title>io.netty.channel.AbstractChannelHandlerContext$WriteTask (1 samples, 1.69%)</title><rect x="1130.0" y="627.0" width="20.0" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="1133.0" y="638.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 3.39%)</title><rect x="1150.0" y="819.0" width="40.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1153.0" y="830.0">jav..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 3.39%)</title><rect x="1150.0" y="803.0" width="40.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1153.0" y="814.0">jav..</text>
</g>
<g>
<title>java/lang/StringCoding.decode (2 samples, 3.39%)</title><rect x="1150.0" y="787.0" width="40.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1153.0" y="798.0">jav..</text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8 (2 samples, 3.39%)</title><rect x="1150.0" y="771.0" width="40.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1153.0" y="782.0">jav..</text>
</g>
<g>
<title>java/lang/StringCoding.decodeUTF8_0 (2 samples, 3.39%)</title><rect x="1150.0" y="755.0" width="40.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1153.0" y="766.0">jav..</text>
</g>
<g>
<title>byte[] (1 samples, 1.69%)</title><rect x="1150.0" y="739.0" width="20.0" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1153.0" y="750.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 1.69%)</title><rect x="1170.0" y="739.0" width="20.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1173.0" y="750.0"></text>
</g>
<g>
<title>byte[] (1 samples, 1.69%)</title><rect x="1170.0" y="723.0" width="20.0" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="1173.0" y="734.0"></text>
</g>
</g>
</svg>
